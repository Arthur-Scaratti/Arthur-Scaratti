
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Models
{
    public class BEG_PCE_COBRANCA
    {

        [NotMapped]
        public string Trigger_BEG_TRG_AIUD_PCE_COBRANCA { get; set; } = `{"triggering_event":"INSERT OR UPDATE OR DELETE","trigger_body":"begin\n  --\n  if INSERTING then\n    if :new.AD_ORG_ID = 0 then\n      RAISE_APPLICATION_ERROR(-20001,\n                              'Deve ser obrigatoriamente informado uma Filial!');\n    end if;\n  \n    update BEG_BANCO\n       set IND_COB_ESCRITURAL = 'Y'\n     where BEG_BANCO_ID = :new.BEG_BANCO_ID;\n  \n  end if;\n  --\n  if DELETING then\n    update BEG_BANCO\n       set IND_COB_ESCRITURAL = 'N'\n     where BEG_BANCO_ID = :old.BEG_BANCO_ID;\n  end if;\n  --\n  if UPDATING then\n    if :new.ISACTIVE != :old.ISACTIVE then\n      update BEG_BANCO\n         set IND_COB_ESCRITURAL = :new.ISACTIVE\n       where BEG_BANCO_ID = :new.BEG_BANCO_ID;\n    end if;\n  end if;\nend BEG_TRG_AIUD_PCE_COBRANCA;\n"}`;
    
        [NotMapped]
        public string Trigger_BEG_TRG_BIU_PCE_COBRANCA_DIR { get; set; } = `{"triggering_event":"INSERT OR UPDATE","trigger_body":"declare\n  pragma autonomous_transaction;\n  --\n  V_SQL       varchar(4000);\n  V_FIL       varchar2(10) := null;\n  V_DIRETORIO varchar(1000) := null; --'/opt/oracle/utl_file_dir/bancos/'; --Pegar dos parametros\n  V_SISTEMA   varchar2(100) := null;\n  V_REMESSA   varchar2(20) := null;\n  V_RETORNO   varchar2(20) := null;\n  V_REMESSA2  varchar2(20) := null;\n  V_RETORNO2  varchar2(20) := null;\n  --\n  cursor C_BANCO is\n    select A.value\n      from BEG_BANCO A\n     where A.BEG_BANCO_ID = NVL(:new.BEG_BANCO_ID, :old.BEG_BANCO_ID);\n  V_BANCO varchar(10);\n  --\n  cursor C_FILIAL is\n    select value COD\n      from AD_ORG\n     where AD_CLIENT_ID = :new.AD_CLIENT_ID\n       and AD_ORG_ID = :new.AD_ORG_ID;\n  --\n  cursor C_DIRETORIOS(P_VALUE varchar) is\n    select B.DIRECTORY_NAME,\n           B.DIRECTORY_PATH\n      from SYS.DBA_DIRECTORIES B\n     where B.DIRECTORY_NAME like 'CE' || '%' || P_VALUE || V_FIL;\n  --\nbegin\n  /*------------------------------------------\n    Buscando parametros o sistemas\n  ------------------------------------------*/\n  V_DIRETORIO := BEG_FNC_RETORNA_PARAM_GERAL('Geral',\n                                             null,\n                                             'DIR_COBRANCA_E');\n  --\n  if V_SISTEMA = -1 then\n    RAISE_APPLICATION_ERROR(-20001,\n                            'Parametro Sistema: DIR_COBRANCA_E. Verificar seu cadastramento!');\n  end if;\n  --\n  if LENGTH(trim(V_DIRETORIO)) = 0 then\n    RAISE_APPLICATION_ERROR(-20005,\n                            'A informacao do diretorio esta invalida!');\n  end if;\n  --\n  V_SISTEMA := UPPER(BEG_FNC_RETORNA_PARAM_GERAL('Geral',\n                                                 null,\n                                                 'SISTEMA_OPERACIONAL'));\n  -- \n  if V_SISTEMA not in ('UNIX', 'WINDOWS') then\n    RAISE_APPLICATION_ERROR(-20002,\n                            'Verificar Parametro Sistema: SISTEMA_OPERACIONAL. Liberado apenas para UNIX ou WINDOWS....');\n  end if;\n  /*----------------------------------------------\n   Busca o codigo do banco\n  ------------------------------------------------*/\n  open C_BANCO;\n  fetch C_BANCO\n    into V_BANCO;\n  close C_BANCO;\n\n  /*----------------------------------------------\n  Busca o codigo da filial\n  -----------------------------------------------*/\n  open C_FILIAL;\n  fetch C_FILIAL\n    into V_FIL;\n  if C_FILIAL%notfound then\n    V_FIL := null;\n  end if;\n  if V_FIL = '0' then\n    V_FIL := null;\n  end if;\n  close C_FILIAL;\n\n  /*----------------------------------------------\n   Criando o diretorio na tabela dba_diretories\n  ------------------------------------------------*/\n  for R in C_DIRETORIOS(V_BANCO)\n  loop\n    begin\n      V_SQL := 'DROP DIRECTORY ' || R.DIRECTORY_NAME;\n      execute immediate V_SQL;\n    exception\n      when others then\n        DBMS_OUTPUT.PUT_LINE('DROP ' || R.DIRECTORY_NAME || ' ' || sqlerrm);\n    end;\n  end loop;\n\n  ------------------------------------\n  -- Criacao no sistema operacional --\n  ------------------------------------\n  if V_SISTEMA = 'UNIX' then\n    -- Remove diretorios no Unix\n    BEG_PRC_HOST('/bin/rm -rf ' || V_DIRETORIO || V_BANCO || V_FIL || '/');\n    -- Criacao de diretorios no Unix\n    BEG_PRC_HOST('/bin/mkdir ' || V_DIRETORIO || V_BANCO || V_FIL || '/');\n    BEG_PRC_HOST('/bin/mkdir ' || V_DIRETORIO || V_BANCO || V_FIL ||\n                 '/remessas/');\n    BEG_PRC_HOST('/bin/mkdir ' || V_DIRETORIO || V_BANCO || V_FIL ||\n                 '/retornos/');\n    BEG_PRC_HOST('/bin/mkdir ' || V_DIRETORIO || V_BANCO || V_FIL ||\n                 '/remessas/bkp/');\n    BEG_PRC_HOST('/bin/mkdir ' || V_DIRETORIO || V_BANCO || V_FIL ||\n                 '/retornos/bkp/');\n    V_REMESSA  := '/remessas/';\n    V_RETORNO  := '/retornos/';\n    V_REMESSA2 := '/remessas/bkp/';\n    V_RETORNO2 := '/retornos/bkp/';\n  else\n    -- Remove diretorios no Windows\n    BEG_PRC_HOST('rm /s/q ' || V_DIRETORIO || V_BANCO || V_FIL || '\\');\n    -- Criacao de diretorios no Windows\n    BEG_PRC_HOST('mkdir ' || V_DIRETORIO || V_BANCO || V_FIL || '\\');\n    BEG_PRC_HOST('mkdir ' || V_DIRETORIO || V_BANCO || V_FIL ||\n                 '\\remessas\\');\n    BEG_PRC_HOST('mkdir ' || V_DIRETORIO || V_BANCO || V_FIL ||\n                 '\\retornos\\');\n    BEG_PRC_HOST('mkdir ' || V_DIRETORIO || V_BANCO || V_FIL ||\n                 '\\remessas/bkp\\');\n    BEG_PRC_HOST('mkdir ' || V_DIRETORIO || V_BANCO || V_FIL ||\n                 '\\retornos\\bkp\\');\n    V_REMESSA  := '\\remessas\\';\n    V_RETORNO  := '\\retornos\\';\n    V_REMESSA2 := '\\remessas\\bkp\\';\n    V_RETORNO2 := '\\retornos\\bkp\\';\n  end if;\n  --\n  -- Criac?o na tabela dba_diretories\n  --\n  begin\n    V_SQL := 'CREATE DIRECTORY CE_REM_' || V_BANCO || V_FIL || ' AS ''' ||\n             V_DIRETORIO || V_BANCO || V_FIL || V_REMESSA || ''' ';\n    -- '/remessas/'' ';\n    execute immediate V_SQL;\n  exception\n    when others then\n      DBMS_OUTPUT.PUT_LINE('CREATE CE_REM_' || V_BANCO || V_FIL || ' ' ||\n                           sqlerrm);\n  end;\n  --\n  begin\n    V_SQL := 'CREATE DIRECTORY CE_RET_' || V_BANCO || V_FIL || ' AS ''' ||\n             V_DIRETORIO || V_BANCO || V_FIL || V_RETORNO || ''' ';\n    --'/retornos/'' ';\n    execute immediate V_SQL;\n  exception\n    when others then\n      DBMS_OUTPUT.PUT_LINE('CREATE CE_RET_' || V_BANCO || V_FIL || ' ' ||\n                           sqlerrm);\n      null;\n  end;\n  --\n  :new.DIRETORIO_REMESSA        := V_DIRETORIO || V_BANCO || V_FIL ||\n                                   V_REMESSA;\n  :new.DIRETORIO_REMESSA_BACKUP := V_DIRETORIO || V_BANCO || V_FIL ||\n                                   V_REMESSA2;\n  :new.DIRETORIO_RETORNO        := V_DIRETORIO || V_BANCO || V_FIL ||\n                                   V_RETORNO;\n  :new.DIRETORIO_RETORNO_BACKUP := V_DIRETORIO || V_BANCO || V_FIL ||\n                                   V_RETORNO2;\n  --\nend BEG_TRG_BIU_PCE_COBRANCA_DIR;\n"}`;
    
    }
}
