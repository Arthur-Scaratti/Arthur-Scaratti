
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Models
{
    public class BEG_VEN_CONV_REC_LOT_ITEM
    {

        [NotMapped]
        public string Trigger_BEG_TRG_BUD_CONV_REC_LOT_ITM { get; set; } = `{"triggering_event":"UPDATE OR DELETE","trigger_body":"declare\n\n  VC_PARC_OK BEG_VEN_CONV_REC_LOT_ITEM.ISACTIVE%type;\n\n  cursor CLOTE is\n    select X.*,\n           rowid\n      from BEG_VEN_CONV_REC_LOT X\n     where X.BEG_VEN_CONV_REC_LOT_ID = :new.BEG_VEN_CONV_REC_LOT_ID;\n  RLOTE CLOTE%rowtype;\n\n  pragma autonomous_transaction;\n\nbegin\n\n  if UPDATING then\n    open CLOTE;\n    fetch CLOTE\n      into RLOTE;\n    if CLOTE%notfound then\n      null;\n    end if;\n    close CLOTE;\n    -- Quando lote estiver finalizado não pode permitir alteracoes\n    if RLOTE.SIT_LOTE = 'C' then\n      RAISE_APPLICATION_ERROR(-20003,\n                              'Lote já esta finalizado, não permitido manutenção ');\n    end if;\n    --\n    if UPDATING('isactive') then\n      if :new.ISACTIVE = 'Y' then\n        -- Checar se parcela menor esta ativa para pagamento\n        VC_PARC_OK := BEG_FNC_CHECA_PARCELA(:new.AD_CLIENT_ID,\n                                            :new.AD_ORG_ID,\n                                            :new.beg_vw_cliente_id, --BEG_PESSOA_ID, -- AOK -- 18/09/2009\n                                            :new.CONTRATO,\n                                            :new.PARCELA);\n        --\n        if VC_PARC_OK = 'N' then\n          RAISE_APPLICATION_ERROR(-20001,\n                                  'Existe parcela anterior ainda em aberto');\n        end if;\n        --\n        update BEG_VEN_CONV_REC_LOT X\n           set X.QTDE_TITULO_FINAL = X.QTDE_TITULO_FINAL + 1,\n               X.VLR_LOTE_FINAL    = X.VLR_LOTE_FINAL + :new.VLR_TITULO,\n               X.VLR_PREV_REPASSE  = (X.VLR_LOTE_FINAL + :new.VLR_TITULO) *\n                                     (-X.PERC_COMISSAO / 100 + 1)\n         where rowid = RLOTE.rowid;\n        commit;\n      else\n        VC_PARC_OK := BEG_FNC_CHECA_PARC_POS(:new.AD_CLIENT_ID,\n                                             :new.AD_ORG_ID,\n                                             :new.beg_vw_cliente_id, -- BEG_PESSOA_ID, -- aok -- 18/09/2009\n                                             :new.CONTRATO,\n                                             :new.PARCELA);\n        --\n        if VC_PARC_OK = 'Y' then\n          RAISE_APPLICATION_ERROR(-20002,\n                                  'Não pode ser desativado uma parcela fora de sequencia de pagamento ...');\n        end if;\n        update BEG_VEN_CONV_REC_LOT X\n           set X.QTDE_TITULO_FINAL = X.QTDE_TITULO_FINAL - 1,\n               X.VLR_LOTE_FINAL    = X.VLR_LOTE_FINAL - :new.VLR_TITULO,\n               X.VLR_PREV_REPASSE  = (X.VLR_LOTE_FINAL - :new.VLR_TITULO) *\n                                     (-X.PERC_COMISSAO / 100 + 1)\n         where rowid = RLOTE.rowid;\n        commit;\n      end if;\n    end if;\n  end if;\n  if DELETING then\n    insert into BEG_VEN_CONV_REC_LOT_I_LOG\n      (BEG_VEN_CONV_REC_LOT_I_LOG_ID,\n       AD_CLIENT_ID,\n       AD_ORG_ID,\n       ISACTIVE,\n       CREATED,\n       CREATEDBY,\n       UPDATED,\n       UPDATEDBY,\n       BEG_CONVENIO_ID,\n       BEG_CRC_TITULO_ID,\n       BEG_PESSOA_ID,\n       VLR_TITULO,\n       DT_EMISSAO,\n       DT_VCTO,\n       BEG_VEN_CONV_REC_LOT_ID,\n       DT_REFERENCIA,\n       CONTRATO,\n       PARCELA)\n    values\n      (beg_fnc_ad_sequence('BEG_VEN_CONV_REC_LOT_I_LOG'),\n       :old.AD_CLIENT_ID,\n       :old.AD_ORG_ID,\n       :old.ISACTIVE,\n       :old.CREATED,\n       :old.CREATEDBY,\n       :old.UPDATED,\n       :old.UPDATEDBY,\n       :old.BEG_CONVENIO_ID,\n       :old.BEG_CRC_TITULO_ID,\n       :old.beg_vw_cliente_id, --BEG_PESSOA_ID, -- AOK - 18/09/2009\n       :old.VLR_TITULO,\n       :old.DT_EMISSAO,\n       :old.DT_VCTO,\n       :old.BEG_VEN_CONV_REC_LOT_ID,\n       :old.DT_REFERENCIA,\n       :old.CONTRATO,\n       :old.PARCELA);\n       commit;\n  end if;\nend BEG_TRG_BUD_CONV_REC_LOT_ITM;\n"}`;
    
        [NotMapped]
        public string Trigger_BEG_TRG_BI_CONV_REC_LOT_ITM { get; set; } = `{"triggering_event":"INSERT","trigger_body":"declare\n\n  cursor CTIT is\n    select *\n      from BEG_CRC_TITULO T\n     where T.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID;\n  RTIT CTIT%rowtype;\n\n  cursor CLOTE is\n    select X.*,\n           rowid\n      from BEG_VEN_CONV_REC_LOT X\n     where X.BEG_VEN_CONV_REC_LOT_ID = :new.BEG_VEN_CONV_REC_LOT_ID;\n  RLOTE CLOTE%rowtype;\n\nbegin\n\n  open CLOTE;\n  fetch CLOTE\n    into RLOTE;\n  if CLOTE%notfound then\n    null;\n  end if;\n  close CLOTE;\n  -- Quando lote estiver finalizado não pode permitir alteracoes\n  if RLOTE.SIT_LOTE = 'C' then\n    RAISE_APPLICATION_ERROR(-20003,\n                            'Lote já esta finalizado, não permitido manutenção ');\n  end if;\n  --\n  open CTIT;\n  fetch CTIT\n    into RTIT;\n  close CTIT;\n  :new.DT_REFERENCIA := TO_DATE('01' || TO_CHAR(ADD_MONTHS(RTIT.DT_VCTO, -1),\n                                                'mmrrrr'),\n                                'dd/mm/yyyy');\n  --\n  :new.BEG_CONVENIO_ID := RLOTE.BEG_CONVENIO_ID;\n  :new.VLR_TITULO      := RTIT.VLR_ABERTO;\n  :new.DT_VCTO         := RTIT.DT_VCTO;\n  --\n  update BEG_VEN_CONV_REC_LOT X\n     set X.QTDE_TITULO_FINAL = X.QTDE_TITULO_FINAL + 1,\n         X.VLR_LOTE_FINAL    = X.VLR_LOTE_FINAL + :new.VLR_TITULO,\n         X.VLR_PREV_REPASSE  = (X.VLR_LOTE_FINAL + :new.VLR_TITULO) *\n                               (-X.PERC_COMISSAO / 100 + 1)\n   where rowid = RLOTE.rowid;\n  --\nend BEG_TRG_BI_CONV_REC_LOT_ITM;\n"}`;
    
    }
}
