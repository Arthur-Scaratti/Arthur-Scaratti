
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Models
{
    public class BEG_CRC_HISTORICO
    {
            [Required]
    [StringLength(1)]
        /// <summary>
        /// Indica que o movimento origiou de uma renegociacao. Esta informaao sera utilizada parea enviar arq. assessoria.
        /// </summary>
        public string IND_RENEGOCIACAO { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int BEG_CRC_PGTO_MANUAL_ID { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int BEG_FIN_PORTADOR_ID { get; set; }
            [Required]
    [Key]
        /// <summary>
        /// 
        /// </summary>
        public int BEG_CRC_HISTORICO_ID { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int AD_CLIENT_ID { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int AD_ORG_ID { get; set; }
            [Required]
    [StringLength(1)]
        /// <summary>
        /// 
        /// </summary>
        public string ISACTIVE { get; set; }
            [StringLength(40)]
        /// <summary>
        /// 
        /// </summary>
        public string VALUE { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public string CREATED { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int CREATEDBY { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public string UPDATED { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int UPDATEDBY { get; set; }
            [Required]
        /// <summary>
        /// valor do movimento
        /// </summary>
        public int VLR_MOVTO { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int VLR_JUROS { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int VLR_MULTA { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int VLR_DESCONTO { get; set; }
        
        /// <summary>
        /// numero do recibo de pagamento
        /// </summary>
        public int RECIBO_PAGTO { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int BEG_CRC_TPMOV_ID { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int BEG_CRC_TITULO_ID { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int BEG_PESSOA_COBRADOR_ID { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int BEG_PESSOA_CAIXA_ID { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int BEG_BANCO_ID { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int BEG_FILIAL_PGTO_ID { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public string DT_PGTO { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int COMISSAO { get; set; }
        
        /// <summary>
        /// sequencia dos lancamentos no historico
        /// </summary>
        public int SEQ_PGTO { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int VLR_DESPESA { get; set; }
        
        /// <summary>
        /// valor do reajuste sofrido na compra programada
        /// </summary>
        public int VLR_REAJUSTE { get; set; }
            [StringLength(100)]
        /// <summary>
        /// Observação referente ao histórico
        /// </summary>
        public string OBS { get; set; }
        
        /// <summary>
        /// Número do lote manual. (pagto manual ou lote recebimento convênio)
        /// </summary>
        public int LOTE_MANUAL { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int BEG_VEN_CONV_REC_FAT_LOT_ID { get; set; }
        
        /// <summary>
        /// numero do caixa - AOK - 15/10/07 - Diementz
        /// </summary>
        public int NRO_CAIXA { get; set; }

        [NotMapped]
        public string Trigger_TRG_BIUD_CRC_HIS_ENCERRAMENTO { get; set; } = `{"triggering_event":"INSERT OR UPDATE OR DELETE","trigger_body":"declare\n\n     cursor C_FECH_CONT is\n    select MAX(C.DT_FINAL) DT_FINAL\n      from BEG_FECH_CONTABIL C\n      where c.ind_escrita = 'N';\n  --\n  R_FECH_CONT C_FECH_CONT%rowtype;\n  --\n  cursor C_FECH_CONT1 is\n  select ind_escrita from BEG_FECH_CONTABIL C where c.dt_final = R_FECH_CONT.DT_FINAL;\n  --\n  R_FECH_CONT1 C_FECH_CONT1%rowtype;\n  --\n  begin\n      if (updating\n      and :new.DT_PGTO <> :old.DT_PGTO)\n       or inserting  or deleting\n       then\n    open C_FECH_CONT;\n    fetch C_FECH_CONT into R_FECH_CONT;\n    close C_FECH_CONT;\n    --\n    open C_FECH_CONT1;\n    fetch C_FECH_CONT1\n      into R_FECH_CONT1;\n    close C_FECH_CONT1;  \n    --\n    if R_FECH_CONT.DT_FINAL >= :new.DT_PGTO then\n      if nvl(r_FECH_CONT1.ind_escrita,'N') ='N' then\n      raise_application_error(-20501,'Movimento ja encerrado!'||R_FECH_CONT.DT_FINAL);\n      END IF;\n    end if;\n  end if;\n  end trg_biud_crc_his_encerramento;\n"}`;
    
        [NotMapped]
        public string Trigger_DIE_TRG_BI_CRC_HISTORICO { get; set; } = `{"triggering_event":"INSERT","trigger_body":"declare\n  VN_BEG_CRC_TPMOV_ID1 BEG_CRC_TPMOV.BEG_CRC_TPMOV_ID%type;\n  VN_BEG_CRC_TPMOV_ID2 BEG_CRC_TPMOV.BEG_CRC_TPMOV_ID%type;\n\n  cursor CTITULO is\n    select T.*, R.VALUE RENEG, R.AD_ORG_ID AD_ORG_RENEG\n      from BEG_CRC_TITULO T,\n           BEG_CRC_RENEGOCIACAO R,\n           BEG_CRC_TITULO_RENEGOCIADO TR\n     where T.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n       AND T.BEG_CRC_TITULO_ID= TR.BEG_CRC_TITULO_ID\n       AND R.BEG_CRC_RENEGOCIACAO_ID=TR.BEG_CRC_RENEGOCIACAO_ID\n       and T.BEG_COBRADOR_ID is not null\n       and r.docstatus = 'AP';\n  --\n  RTITULO CTITULO%rowtype;\n\n  -- 10/10/2008 - AOK\n  cursor CTITCOBR(PBEG_COBRADOR_ID number) is\n    select TC.*\n      from BEG_TITULO_COBRADOR TC\n     where TC.BEG_COBRADOR_ID = PBEG_COBRADOR_ID\n       and TC.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID;\n  RTITCOBR CTITCOBR%rowtype;\n\n  CURSOR Cad_org_tit IS\n    select T.ad_org_id\n      from BEG_CRC_TITULO T\n     where T.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID;\n  --\nBEGIN\n--  OPEN cad_org_tit;\n--  fetch cad_org_tit INTO :NEW.ad_org_id;\n--  close cad_org_tit;\n  if :new.value > 1 then\n    open CTITULO;\n    fetch CTITULO\n      into RTITULO;\n    CLOSE CTITULO;\n    if NVL(RTITULO.BEG_COBRADOR_ID, 0) > 0 then\n      VN_BEG_CRC_TPMOV_ID1 := BEG_FNC_RETORNA_PARAM_GERAL('Vendas',\n                                                          null,\n                                                          'BX_RENEGOCIACAO');\n      VN_BEG_CRC_TPMOV_ID2 := BEG_FNC_RETORNA_PARAM_GERAL('Vendas',\n                                                          null,\n                                                          'BX_RENEGOCIACAO_SALDO');\n    \n      if (NVL(VN_BEG_CRC_TPMOV_ID1, 0) = :new.BEG_CRC_TPMOV_ID\n         or NVL(VN_BEG_CRC_TPMOV_ID2, 0) = :new.BEG_CRC_TPMOV_ID ) OR :NEW.IND_RENEGOCIACAO = 'Y' then\n      \n        open CTITCOBR(RTITULO.BEG_COBRADOR_ID);\n        fetch CTITCOBR\n          into RTITCOBR;\n        if CTITCOBR%found then\n          update BEG_TITULO_COBRADOR BTC\n             set BTC.IND_RENEGOCIADO = 'Y'\n           where BTC.BEG_TITULO_COBRADOR_ID =\n                 RTITCOBR.BEG_TITULO_COBRADOR_ID;\n        else\n          RTITCOBR.BEG_FILIAL_ID := null;\n        end if;\n        /*        update BEG_TITULO_COBRADOR TC\n                   set TC.IND_RENEGOCIADO = 'Y'\n                 where TC.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n                   and TC.BEG_COBRADOR_ID = rtitulo.BEG_COBRADOR_ID;\n        */\n      \n        begin\n          insert into DIE_CRC_RENEGOCIACAO\n            (AD_CLIENT_ID,\n             AD_ORG_ID,\n             value,\n             BEG_COBRADOR_ID,\n             DT_RENEGOCIACAO,\n             BEG_FILIAL_ID) -- AOK -- 13/10/2008\n          values\n            (RTITULO.AD_CLIENT_ID,\n             RTITULO.AD_ORG_RENEG,\n             RTITULO.RENEG,\n             RTITULO.BEG_COBRADOR_ID,\n             sysdate,\n             RTITULO.AD_ORG_RENEG /*NVL(RTITCOBR.BEG_FILIAL_ID, RTITULO.AD_ORG_ID) -- AOK -- 13/10/2008*/\n             );\n        exception\n          when DUP_VAL_ON_INDEX then\n            null;\n          when others then\n            RAISE_APPLICATION_ERROR(-20001,\n                                    'Erro não identificado - ' || sqlerrm);\n        end;\n      end if;\n    \n    end if;\n  end if;\n\nend DIE_TRG_BI_CRC_HISTORICO;\n"}`;
    
        [NotMapped]
        public string Trigger_DIE_TRG_BU_CRC_HITORICO_OF { get; set; } = `{"triggering_event":"UPDATE","trigger_body":"begin\n  UPDATE BEG_CRC_TITULO T\n     set T.VLR_TITULO = :new.VLR_MOVTO,   \n         T.VLR_ABERTO = :new.VLR_MOVTO\n   where T.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n     and T.VLR_TITULO = T.VLR_ABERTO;\n  if sql%rowcount = 0 then\n    RAISE_APPLICATION_ERROR(-20001,\n                            'Não será permitido a alteracao, titulo já possui baixa!');\n  end if;\nend DIE_TRG_BU_CRC_HITORICO_OF;\n"}`;
    
        [NotMapped]
        public string Trigger_BEG_TRG_BIUD_CRC_HISTORICOS { get; set; } = `{"triggering_event":"INSERT OR UPDATE OR DELETE","trigger_body":"declare     \n  /*--------------------------------------------------------------------------------------------------\n  Trigger      : TRG_BIUD_BEG_CRC_HISTORICOS\n  FUNCAO       : Ao movimentar o titulo, consiste os valores atualizando o titulo (beg_crc_titulo)\n  ANALISTA     : Ira Ubirajara\n  CRIACAO      : ??/??/???? - Ira Ubirajara\n  ----------------------------------------------------------------------------------------------------\n  ALTERACOES\n  21/04/2006 - Aroldo O. Krul - Passa a fazer a baixa no beg_titulo_cobrador - titulos em cobranca e\n               seta o indice de envio para coranca como 'N'.\n  25/04/2006 - Aroldo O. Krul - Refeito a numeracão dos erros Oracle - comecando em -20001, pois estavam\n               todos com -20002.\n  27/04/2006 - Aroldo O. Krul - Assinala em beg_titulo_cobrador, titulo em cobranca, quando este for\n               renegociado\n  27/09/2006 - Aroldo O. Krul - quando estorno parcial estava com teste de valores invertidos\n  24/11/2006 - Aroldo O. Krul - Correcao na leitura da sequencia para o historico - faltava a leitura\n                                pela Ad_client_id e Ad_org_id.\n  19/01/2007 - Aroldo O. Krul - O valor de pagto para titulos em cobranca foi somado jrs+multa-descontos                                \n  30/03/2007 - Aroldo O. Krul - Inserido o campo beg_cobrador_id no busca_titulo\n                              - Nas atualizacoes de beg_titulo_cobrador - inserido teste beg_cobrador_id\n  12/06/2007 - Aroldo O. Krul - Não permitir a inclusao de mais de um registro de historico com value = 1                            \n                              - Quando delecao , testar se existe baixa, existindo nao permitir\n  03/07/2007 - Aroldo O. Krul - Inserido teste para verifiar se eh registro de emissaodo titulo, se sim, \n                                pode alterar, se nao - gerar erro\n  29/02/2008 - Aroldo O. Krul - Inserido ao atualizar Beg_titulo_cobrador o tipo de movimento (beg_crc_tpmov_id)                                \n  17/03/2008 - Aroldo O. Krul - Inserido procedimento de estorno para beg_titulo_cobrador\n  19/03/2008 - Aroldo O. Krul - Desabilitado tratamento da renegociacao - ver die_trg_bu_crc_historico\n  14/01/2009 - Aroldo O. Krul - Quando for excluir um registro de historico - verificar se o titulo não\n                                esta com algum cobrador\n  ---------------------------------------------------------------------------------------------------*/\n\n  VN_CONT number := 0; -- AOK -- 12/06/2007\n  --VN_BEG_CRC_TITULO_ID BEG_CRC_TITULO.BEG_CRC_TITULO_ID%type;\n  --VN_INDICE            number := 0;\n  --\n  cursor BUSCA_TP_MOV is\n    select A.DEBITO_CREDITO,\n           A.CALCULA_JUROS,\n           A.TP_PGTO,\n           NVL(A.REFLEXO_COMISSAO, 'L') REFLEXO_COMISSAO\n      from BEG_CRC_TPMOV A\n     where BEG_CRC_TPMOV_ID = :new.BEG_CRC_TPMOV_ID;\n  --\n  VREG1 BUSCA_TP_MOV%rowtype;\n  --\n  cursor BUSCA_TITULO(PBEG_CRC_TITULO_ID number) is\n    SELECT B.VLR_ABERTO,\n           b.ad_org_id,\n           B.DT_EMISSAO,\n           C.DEBITO_CREDITO,\n           B.VLR_TITULO,\n           B.VLR_MULTA,\n           B.VLR_JUROS,\n           B.VLR_DESCONTO,\n           B.COMISSAO,\n           B.value || '-' || B.PARCELA TITULO,\n           NVL(B.BEG_COBRADOR_ID, 0) BEG_COBRADOR_ID -- AOK - 30/03/2007           \n      from BEG_CRC_TITULO  B,\n           BEG_TIPO_TITULO C\n     where B.BEG_CRC_TITULO_ID = PBEG_CRC_TITULO_ID --:new.BEG_CRC_TITULO_ID\n       and C.BEG_TIPO_TITULO_ID = B.BEG_TIPO_TITULO_ID;\n  --\n  VREG2 BUSCA_TITULO%rowtype;\n  --\n  /*  cursor BUSCA_SEQ is\n      select SEQ_BAIXA\n        from BEG_CRC_SEQ_HIST SEQ\n       where SEQ.AD_CLIENT_ID = :new.AD_CLIENT_ID\n         and SEQ.AD_ORG_ID = :new.AD_ORG_ID\n         for update;\n    --\n    VREG3 BUSCA_SEQ%rowtype;\n  */ --\n  --\n  cursor C_FECH_CONT is\n    select MAX(C.DT_FINAL) DT_FINAL\n      from BEG_FECH_CONTABIL C;\n  --\n  R_FECH_CONT C_FECH_CONT%rowtype;\n  \n  --\n  cursor C_FECH_CONT1 is\n  select ind_escrita from BEG_FECH_CONTABIL C where c.dt_final = R_FECH_CONT.DT_FINAL;\n  R_FECH_CONT1 C_FECH_CONT1%rowtype;\n  --\nbegin\n  --\n  OPEN C_FECH_CONT;\n  FETCH C_FECH_CONT INTO R_FECH_CONT;\n  CLOSE C_FECH_CONT;\n  --\n  open C_FECH_CONT1;\n    fetch C_FECH_CONT1\n      into R_FECH_CONT1;\n    close C_FECH_CONT1;  \n  \n  --\n  IF :NEW.DT_PGTO <= R_FECH_CONT.DT_FINAL THEN\n    if nvl(r_FECH_CONT1.ind_escrita,'N') ='N' then\n    RAISE_APPLICATION_ERROR(-20001,'Não pode deletar, alterar ou inserir registro quando fechamento contabil está fechado!');    \n    end if;\n   END IF;  \n  --\n  VN_CONT := 0; -- aok -- 03/07/2007\n  if DELETING\n     or UPDATING then\n    null;\n    if DELETING then\n      open BUSCA_TITULO(:old.BEG_CRC_TITULO_ID);\n      fetch BUSCA_TITULO\n        into VREG2;\n      close BUSCA_TITULO;\n /*     if NVL(VREG2.BEG_COBRADOR_ID, 0) > 0 then\n        RAISE_APPLICATION_ERROR(-20001,\n                                'Historico não pode ser excluido. Titulo esta com cobrador.');\n      end if;*/\n    end if;\n--    null;\n    -- \n    -- AOK -- 03/07/2007 -- Apenas permitir alteracao ou delecao se n?o tiver \n    --                      sido feito baixa no titulo\n    /*    if DELETING then\n          VN_INDICE            := TO_NUMBER(:old.value);\n          VN_BEG_CRC_TITULO_ID := :old.BEG_CRC_TITULO_ID;\n        else\n          VN_INDICE            := TO_NUMBER(:new.value);\n          VN_BEG_CRC_TITULO_ID := :new.BEG_CRC_TITULO_ID;\n        end if;\n        if VN_INDICE = 1 then\n          -- Vlr.titulo - vlr.aberto pois pode ter sido feito uma baixa parcial\n          select T.VLR_TITULO - T.VLR_ABERTO\n            into VN_CONT\n            from BEG_CRC_TITULO T\n           where T.BEG_CRC_TITULO_ID = VN_BEG_CRC_TITULO_ID;\n          if VN_CONT > 0 then\n            RAISE_APPLICATION_ERROR(-20001,\n                                    'Historico n?o pode ser alterado ou excluido. Faca um movimento de Estorno.');\n          end if;\n        else\n          --null\n          RAISE_APPLICATION_ERROR(-20001,\n                                  'Historico n?o pode ser alterado ou excluido. Faca um movimento de Estorno.');\n        end if;\n    */\n  elsif :new.value = 1 then\n    -- AOK -- 12/06/2007\n    select count(1)\n      into VN_CONT\n      from BEG_CRC_HISTORICO H\n     where H.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n       and H.value = 1;\n    if VN_CONT > 0 then\n      RAISE_APPLICATION_ERROR(-20001, 'Inclusao de registro invalido');\n    end if;\n  elsif :new.value > 1 then\n    --\n    --\n    --open BUSCA_TITULO; -- AOK - 14/01/2009\n    open BUSCA_TITULO(:new.BEG_CRC_TITULO_ID);\n    fetch BUSCA_TITULO\n      into VREG2;\n    CLOSE BUSCA_TITULO;\n    :new.ad_org_id := vreg2.ad_org_id;\n    if :new.AD_ORG_ID = 0 then\n      RAISE_APPLICATION_ERROR(-20002,\n                              'Faltou informar a filial...... Verifique!');\n    END IF;\n    --\n    open BUSCA_TP_MOV;\n    fetch BUSCA_TP_MOV\n      into VREG1;\n    close BUSCA_TP_MOV;\n    \n    --\n    if trunc(:new.Dt_Pgto) < trunc(VREG2.DT_EMISSAO) then\n      RAISE_APPLICATION_ERROR(-20001,\n                              'Data de baixa não pode ser anterior a data de emissao. ID: '|| :new.beg_crc_titulo_id);\n    end if;\n    \n    --\n    if :new.VLR_MOVTO <= 0 then\n      RAISE_APPLICATION_ERROR(-20001,\n                              'Valor do movimento deve ser maior que zero.');\n    end if;\n    if :new.VLR_MULTA < 0 then\n      RAISE_APPLICATION_ERROR(-20001, 'Valor da multa invalido.');\n    end if;\n    if :new.VLR_JUROS < 0 then\n      RAISE_APPLICATION_ERROR(-20002, 'Valor do juro invalido.');\n    end if;\n    if :new.VLR_DESCONTO < 0 then\n      RAISE_APPLICATION_ERROR(-20003, 'Valor do desconto invalido.');\n    end if;\n    if VREG1.TP_PGTO <> 'E' then  -- Emissao de titulo\n      if VREG2.DEBITO_CREDITO = 'D' then\n        if VREG1.TP_PGTO = 'T' -- Baixa total\n         then\n          if VREG1.DEBITO_CREDITO = 'D' then\n            RAISE_APPLICATION_ERROR(-20004,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            if VREG2.VLR_TITULO <> VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20005,\n                                      'Titulo ja possui pagamentos tipo de movimento invalido para esta baixa, efetue uma baixa por saldo.' ||\n                                      VREG2.TITULO || ' - ' ||\n                                      TO_CHAR(VREG2.VLR_TITULO,\n                                              'fm99999g990d00'));\n            end if;\n            if VREG2.VLR_ABERTO <> :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20006,\n                                      'Valor do movimento difere do valor em aberto ' ||\n                                      VREG2.VLR_ABERTO ||\n                                      ' para este titulo.' || VREG2.TITULO);\n            end if;\n            if :new.VLR_MOVTO > VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20007,\n                                      'Valor do movimento maior que o valor em aberto para o titulo.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        elsif VREG1.TP_PGTO = 'P' -- Baixa parcial\n         then\n          if VREG1.DEBITO_CREDITO = 'D' then\n            RAISE_APPLICATION_ERROR(-20008,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            if VREG2.VLR_ABERTO = :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20009,\n                                      'Valor do movimento igual ao valor em aberto ' ||\n                                      VREG2.VLR_ABERTO ||\n                                      ' para este titulo.' || VREG2.TITULO);\n            end if;\n            if :new.VLR_MOVTO > VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20010,\n                                      'Valor do movimento maior que o valor em aberto para o titulo.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        elsif VREG1.TP_PGTO = 'S' then\n          if VREG1.DEBITO_CREDITO = 'D' then\n            RAISE_APPLICATION_ERROR(-20011,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            if VREG2.VLR_TITULO = VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20012,\n                                      'Nao houve pagamentos para este titulo, efetue baixa parcial ou total.' ||\n                                      VREG2.TITULO);\n            end if;\n            if VREG2.VLR_ABERTO <> :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20013,\n                                      'Valor do movimento deve ser igual ao valor em  aberto ' ||\n                                      VREG2.VLR_ABERTO ||\n                                      ' para este titulo' || VREG2.TITULO);\n            end if;\n            if :new.VLR_MOVTO > VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20014,\n                                      'Valor do movimento maior que o valor em aberto para o titulo.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        elsif VREG1.TP_PGTO = 'R' -- Estorno total\n         then\n          if VREG1.DEBITO_CREDITO = 'C' then\n            RAISE_APPLICATION_ERROR(-20015,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            if (VREG2.VLR_TITULO - VREG2.VLR_ABERTO) <> :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20016,\n                                      'Valor do movimento deve ser igual ao valor ja pago ' ||\n                                      (VREG2.VLR_TITULO - VREG2.VLR_ABERTO) ||\n                                      ' para este titulo, estorno invalido.' ||\n                                      VREG2.TITULO);\n            end if;\n            if :new.VLR_MULTA <> VREG2.VLR_MULTA then\n              RAISE_APPLICATION_ERROR(-20017,\n                                      'Valor da multa deve ser igual ao valor ja pago de multa.' ||\n                                      VREG2.TITULO);\n            end if;\n            if :new.VLR_JUROS <> VREG2.VLR_JUROS then\n              RAISE_APPLICATION_ERROR(-20018,\n                                      'Valor dos juros deve ser igual ao valor ja pago de juros.' ||\n                                      VREG2.TITULO);\n            end if;\n            if :new.VLR_DESCONTO <> VREG2.VLR_DESCONTO then\n              RAISE_APPLICATION_ERROR(-20019,\n                                      'Valor do desconto deve ser igual ao valor ja dado de desconto.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        elsif VREG1.TP_PGTO = 'O' -- Estorno Parcial\n         then\n          if VREG1.DEBITO_CREDITO = 'C' then\n            RAISE_APPLICATION_ERROR(-20020,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            -- AOK  - 27/09/2006 - Alterado o sinal de maior para menor\n            if (VREG2.VLR_TITULO - VREG2.VLR_ABERTO) < :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20021,\n                                      'Valor do movimento deve ser menor que o valor ja pago ' ||\n                                      (VREG2.VLR_TITULO - VREG2.VLR_ABERTO) ||\n                                      ' para este titulo, estorno invalido.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        end if;\n        if NVL(VREG2.COMISSAO, 0) > 0 then\n          if VREG1.REFLEXO_COMISSAO = 'L' then\n            :new.COMISSAO := (VREG2.COMISSAO * ((((:new.VLR_MOVTO -\n                             NVL(:new.VLR_DESCONTO, 0)) * 100) /\n                             VREG2.VLR_TITULO) / 100));\n          \n            BEG_PCK_VEN_COMISSOES.PRC_PAGA_COMISSAO_TITULO(P_AD_CLIENT_ID         => :new.AD_CLIENT_ID,\n                                                           P_AD_ORG_ID            => :new.AD_ORG_ID,\n                                                           P_CREATED              => :new.CREATED,\n                                                           P_CREATEDBY            => :new.CREATEDBY,\n                                                           P_BEG_CRC_TITULO_ID    => :new.BEG_CRC_TITULO_ID,\n                                                           P_BEG_CRC_HISTORICO_ID => :new.BEG_CRC_HISTORICO_ID,\n                                                           P_VALOR_MOVTO          => :new.VLR_MOVTO -\n                                                                                     NVL(:new.VLR_DESCONTO,\n                                                                                         0));\n          \n          elsif VREG1.REFLEXO_COMISSAO = 'E' then\n            :new.COMISSAO := (VREG2.COMISSAO * ((((:new.VLR_MOVTO -\n                             NVL(:new.VLR_DESCONTO, 0)) * 100) /\n                             VREG2.VLR_TITULO) / 100));\n            BEG_PCK_VEN_COMISSOES.PRC_PAGA_COMISSAO_TITULO(P_AD_CLIENT_ID         => :new.AD_CLIENT_ID,\n                                                           P_AD_ORG_ID            => :new.AD_ORG_ID,\n                                                           P_CREATED              => :new.CREATED,\n                                                           P_CREATEDBY            => :new.CREATEDBY,\n                                                           P_BEG_CRC_TITULO_ID    => :new.BEG_CRC_TITULO_ID,\n                                                           P_BEG_CRC_HISTORICO_ID => :new.BEG_CRC_HISTORICO_ID,\n                                                           P_VALOR_MOVTO          => :new.VLR_MOVTO -\n                                                                                     NVL(:new.VLR_DESCONTO,\n                                                                                         0));\n          \n          end if;\n        end if;\n      \n        /*if NVL(VREG2.COMISSAO_TELEVENDA, 0) > 0 then\n          if VREG1.REFLEXO_COMISSAO = 'L' then\n            :new.COMISSAO_TELEVENDA := (VREG2.COMISSAO_TELEVENDA *\n                                       (((:new.VLR_MOVTO * 100) /\n                                       VREG2.VLR_TITULO) / 100));\n          elsif VREG1.REFLEXO_COMISSAO = 'E' then\n            :new.COMISSAO_TELEVENDA := (VREG2.COMISSAO_TELEVENDA *\n                                       (((:new.VLR_MOVTO * 100) /\n                                       VREG2.VLR_TITULO) / 100));\n          end if;\n        end if;*/\n        if VREG1.TP_PGTO in ('P', 'T', 'S') then -- Pagto parcial, total ou por saldo\n          update BEG_CRC_TITULO C\n             set C.VLR_ABERTO   = C.VLR_ABERTO - :new.VLR_MOVTO,\n                 C.VLR_MULTA    = C.VLR_MULTA + :new.VLR_MULTA,\n                 C.VLR_JUROS    = C.VLR_JUROS + :new.VLR_JUROS,\n                 C.VLR_DESCONTO = C.VLR_DESCONTO + :new.VLR_DESCONTO,\n                 C.VLR_REAJUSTE = NVL(C.VLR_REAJUSTE, 0) +\n                                  NVL(:new.VLR_REAJUSTE, 0),\n                 C.VLR_DESPESA  = NVL(C.VLR_DESPESA, 0) +\n                                  NVL(:new.VLR_DESPESA, 0)\n           where C.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID;\n          /*\n             Faz a baixa do titulo em beg_titulo_cobrador e seta para reenviar para\n             a cobranca -- AOK - 21/04/2006\n          */\n          update BEG_TITULO_COBRADOR TC\n             set TC.VLR_ABERTO       = NVL(TC.VLR_ABERTO, 0) -\n                                       :new.VLR_MOVTO,\n                 TC.VLR_PAGTO        = NVL(TC.VLR_PAGTO, 0) +\n                                       (:new.VLR_MOVTO +\n                                        NVL(:new.VLR_MULTA, 0) +\n                                        NVL(:new.VLR_JUROS, 0) -\n                                        NVL(:new.VLR_DESCONTO, 0)),\n                 TC.DT_PAGTO_ANT     = NVL(TC.DT_PAGTO, null),\n                 TC.DT_PAGTO         = :new.DT_PGTO,\n                 TC.IND_ENVIADO      = case when (select C.IND_ATUACAO\n                               from BEG_COBRADOR C\n                              where C.BEG_COBRADOR_ID =\n                                    TC.BEG_COBRADOR_ID) = 'A' then 'N' else TC.IND_ENVIADO end,\n                 TC.DT_ENVIO         = case when (select C.IND_ATUACAO\n                               from BEG_COBRADOR C\n                              where C.BEG_COBRADOR_ID =\n                                    TC.BEG_COBRADOR_ID) = 'A' then null else TC.DT_ENVIO end,\n                 TC.ID_MOTIVO_ANT    = NVL(TC.BEG_CRC_TPMOV_ID, null),\n                 TC.BEG_CRC_TPMOV_ID = :new.BEG_CRC_TPMOV_ID ,-- AOK -- 29/02/2008\n                 TC.IND_RENEGOCIADO = :NEW.IND_RENEGOCIACAO\n           where TC.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n             and TC.BEG_COBRADOR_ID = VREG2.BEG_COBRADOR_ID; -- AOK - 30/03/2007\n          ----------------------------------------------------\n        else\n          update BEG_CRC_TITULO C\n             set C.VLR_ABERTO   = C.VLR_ABERTO + :new.VLR_MOVTO,\n                 C.VLR_MULTA    = C.VLR_MULTA - :new.VLR_MULTA,\n                 C.VLR_JUROS    = C.VLR_JUROS - :new.VLR_JUROS,\n                 C.VLR_DESCONTO = C.VLR_DESCONTO - :new.VLR_DESCONTO,\n                 C.VLR_REAJUSTE = NVL(C.VLR_REAJUSTE, 0) -\n                                  NVL(:new.VLR_REAJUSTE, 0),\n                 C.VLR_DESPESA  = NVL(C.VLR_DESPESA, 0) -\n                                  NVL(:new.VLR_DESPESA, 0)\n           where C.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID;\n          /*\n             Desfaz a baixa do titulo em beg_titulo_cobrador -- AOK - 17/03/2008\n          */\n          update BEG_TITULO_COBRADOR TC\n             set TC.VLR_ABERTO        = NVL(TC.VLR_ABERTO, 0) +\n                                        :new.VLR_MOVTO,\n                 TC.VLR_PAGTO         = NVL(TC.VLR_PAGTO, 0) -\n                                        (:new.VLR_MOVTO +\n                                         NVL(:new.VLR_MULTA, 0) +\n                                         NVL(:new.VLR_JUROS, 0) -\n                                         NVL(:new.VLR_DESCONTO, 0)),\n                 TC.DT_PAGTO          = TC.DT_PAGTO_ANT, --:new.DT_PGTO,\n                 TC.IND_ENVIADO       = case when (select C.IND_ATUACAO\n                                                     from BEG_COBRADOR C\n                                                    where C.BEG_COBRADOR_ID =\n                                                          TC.BEG_COBRADOR_ID) = 'A' then 'N' else TC.IND_ENVIADO end,\n                 TC.DT_ENVIO          = case when (select C.IND_ATUACAO\n                                                     from BEG_COBRADOR C\n                                                    where C.BEG_COBRADOR_ID =\n                                                          TC.BEG_COBRADOR_ID) = 'A' then null else TC.DT_ENVIO end,\n                 TC.BEG_CRC_TPMOV_ID  = NVL(TC.ID_MOTIVO_ANT, null),\n                 TC.DESC_MOTIVO       = null,\n                 TC.DT_BAIXA_COBRANCA = null,\n                 TC.IND_RENEGOCIADO = :NEW.IND_RENEGOCIACAO\n           where TC.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n             and TC.BEG_COBRADOR_ID = VREG2.BEG_COBRADOR_ID; -- AOK - 30/03/2007\n          ----------------------------------------------------\n        end if;\n        /*        --\n                -- AOK - 27/04/2006 - Assinala que o titulo foi renegociado qdo este estiver em cobranca\n                -- AOK -- 19/03/2008 - Procedimento foi alterado e passado para a trigger die_trg_bu_crc_historico\n                if VREG1.TP_PGTO in ('R') then\n                  update BEG_TITULO_COBRADOR TC\n                     set TC.IND_RENEGOCIADO = 'Y'\n                   where TC.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n                     and TC.BEG_COBRADOR_ID = VREG2.BEG_COBRADOR_ID; -- aok - 30/03/2007\n                end if;\n        */\n      else\n        -- titulos lancados a  credito de clientes em caso de devoluc?o\n        -- de mercadorias apos o pagamento\n        if VREG1.TP_PGTO = 'T' then\n          if VREG1.DEBITO_CREDITO = 'C' then\n            RAISE_APPLICATION_ERROR(-20022,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            if VREG2.VLR_TITULO <> VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20023,\n                                      'Titulo ja possui pagamentos tipo de movimento invalido para esta baixa, efetue uma baixa por saldo.' ||\n                                      VREG2.TITULO || ' - ' ||\n                                      TO_CHAR(VREG2.VLR_TITULO,\n                                              'fm99999g990d00'));\n            end if;\n            if VREG2.VLR_ABERTO <> :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20024,\n                                      'Valor do movimento difere do valor em aberto ' ||\n                                      VREG2.VLR_ABERTO ||\n                                      ' para este titulo.' || VREG2.TITULO);\n            end if;\n            if :new.VLR_MOVTO > VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20025,\n                                      'Valor do movimento maior que o valor em aberto para o titulo.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        elsif VREG1.TP_PGTO = 'P' then\n          if VREG1.DEBITO_CREDITO = 'C' then\n            RAISE_APPLICATION_ERROR(-20026,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            if VREG2.VLR_ABERTO = :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20027,\n                                      'Valor do movimento igual ao valor em aberto ' ||\n                                      VREG2.VLR_ABERTO ||\n                                      ' para este titulo.' || VREG2.TITULO);\n            end if;\n            if :new.VLR_MOVTO > VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20028,\n                                      'Valor do movimento maior que o valor em aberto para o titulo.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        elsif VREG1.TP_PGTO = 'S' then\n          if VREG1.DEBITO_CREDITO = 'C' then\n            RAISE_APPLICATION_ERROR(-20029,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            if VREG2.VLR_TITULO = VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20030,\n                                      'Nao houve pagamentos para este titulo, efetue baixa parcial ou total.' ||\n                                      VREG2.TITULO);\n            end if;\n            if VREG2.VLR_ABERTO <> :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20031,\n                                      'Valor do movimento deve ser igual ao valor em  aberto ' ||\n                                      VREG2.VLR_ABERTO ||\n                                      ' para este titulo' || VREG2.TITULO);\n            end if;\n            if :new.VLR_MOVTO > VREG2.VLR_ABERTO then\n              RAISE_APPLICATION_ERROR(-20032,\n                                      'Valor do movimento maior que o valor em aberto para o titulo.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        elsif VREG1.TP_PGTO = 'R' then\n          if VREG1.DEBITO_CREDITO = 'D' then\n            RAISE_APPLICATION_ERROR(-20033,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            if (VREG2.VLR_TITULO - VREG2.VLR_ABERTO) <> :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20034,\n                                      'Valor do movimento deve ser igual ao valor ja pago ' ||\n                                      (VREG2.VLR_TITULO - VREG2.VLR_ABERTO) ||\n                                      ' para este titulo, estorno invalido.' ||\n                                      VREG2.TITULO);\n            end if;\n            if :new.VLR_MULTA <> VREG2.VLR_MULTA then\n              RAISE_APPLICATION_ERROR(-20035,\n                                      'Valor da multa deve ser igual ao valor ja pago de multa.' ||\n                                      VREG2.TITULO);\n            end if;\n            if :new.VLR_JUROS <> VREG2.VLR_JUROS then\n              RAISE_APPLICATION_ERROR(-20036,\n                                      'Valor dos juros deve ser igual ao valor ja pago de juros.' ||\n                                      VREG2.TITULO);\n            end if;\n            if :new.VLR_DESCONTO <> VREG2.VLR_DESCONTO then\n              RAISE_APPLICATION_ERROR(-20037,\n                                      'Valor do desconto deve ser igual ao valor ja dado de desconto.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        elsif VREG1.TP_PGTO = 'O' then\n          if VREG1.DEBITO_CREDITO = 'D' then\n            RAISE_APPLICATION_ERROR(-20038,\n                                    'Tipo de movimento de baixa invalido para este tipo de titulo.' ||\n                                    VREG2.TITULO);\n          else\n            if (VREG2.VLR_TITULO - VREG2.VLR_ABERTO) > :new.VLR_MOVTO then\n              RAISE_APPLICATION_ERROR(-20039,\n                                      'Valor do movimento deve ser menor que o valor ja pago ' ||\n                                      (VREG2.VLR_TITULO - VREG2.VLR_ABERTO) ||\n                                      ' para este titulo, estorno invalido.' ||\n                                      VREG2.TITULO);\n            end if;\n          end if;\n        end if;\n        if NVL(VREG2.COMISSAO, 0) > 0 then\n          if VREG1.REFLEXO_COMISSAO = 'L' then\n            :new.COMISSAO := (VREG2.COMISSAO *\n                             (((:new.VLR_MOVTO * 100) / VREG2.VLR_TITULO) / 100));\n          elsif VREG1.REFLEXO_COMISSAO = 'E' then\n            :new.COMISSAO := (VREG2.COMISSAO *\n                             (((:new.VLR_MOVTO * 100) / VREG2.VLR_TITULO) / 100));\n          end if;\n        end if;\n      \n        /*if NVL(VREG2.COMISSAO_TELEVENDA, 0) > 0 then\n          if VREG1.REFLEXO_COMISSAO = 'L' then\n            :new.COMISSAO_TELEVENDA := (VREG2.COMISSAO_TELEVENDA *\n                                       (((:new.VLR_MOVTO * 100) /\n                                       VREG2.VLR_TITULO) / 100));\n          elsif VREG1.REFLEXO_COMISSAO = 'E' then\n            :new.COMISSAO_TELEVENDA := (VREG2.COMISSAO_TELEVENDA *\n                                       (((:new.VLR_MOVTO * 100) /\n                                       VREG2.VLR_TITULO) / 100));\n          end if;\n        end if;*/\n        if VREG1.TP_PGTO in ('P', 'T', 'S') then\n          update BEG_CRC_TITULO C\n             set C.VLR_ABERTO   = C.VLR_ABERTO - :new.VLR_MOVTO,\n                 C.VLR_MULTA    = C.VLR_MULTA + :new.VLR_MULTA,\n                 C.VLR_JUROS    = C.VLR_JUROS + :new.VLR_JUROS,\n                 C.VLR_DESCONTO = C.VLR_DESCONTO + :new.VLR_DESCONTO,\n                 C.VLR_REAJUSTE = NVL(C.VLR_REAJUSTE, 0) +\n                                  NVL(:new.VLR_REAJUSTE, 0),\n                 C.VLR_DESPESA  = NVL(C.VLR_DESPESA, 0) +\n                                  NVL(:new.VLR_DESPESA, 0)\n           where C.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID;\n          /*\n             Faz a baixa do titulo em beg_titulo_cobrador e seta para reenviar para\n             a cobranca -- AOK - 21/04/2006\n          */\n          update BEG_TITULO_COBRADOR TC\n             set TC.VLR_ABERTO = NVL(TC.VLR_ABERTO, 0) - :new.VLR_MOVTO,\n                 --  TC.VLR_PAGTO   = TC.VLR_PAGTO + :new.VLR_MOVTO,  -- AOK - 19/01/2007\n                 TC.VLR_PAGTO        = NVL(TC.VLR_PAGTO, 0) +\n                                       (:new.VLR_MOVTO +\n                                        NVL(:new.VLR_MULTA, 0) +\n                                        NVL(:new.VLR_JUROS, 0) -\n                                        NVL(:new.VLR_DESCONTO, 0)),\n                 TC.DT_PAGTO_ANT     = TC.DT_PAGTO,\n                 TC.DT_PAGTO         = :new.DT_PGTO,\n                 TC.IND_ENVIADO      = case when (select C.IND_ATUACAO\n                               from BEG_COBRADOR C\n                              where C.BEG_COBRADOR_ID =\n                                    TC.BEG_COBRADOR_ID) = 'A' then 'N' else TC.IND_ENVIADO end,\n                 TC.DT_ENVIO         = case when (select C.IND_ATUACAO\n                               from BEG_COBRADOR C\n                              where C.BEG_COBRADOR_ID =\n                                    TC.BEG_COBRADOR_ID) = 'A' then null else TC.DT_ENVIO end,\n                 TC.ID_MOTIVO_ANT    = NVL(TC.BEG_CRC_TPMOV_ID, null),\n                 TC.BEG_CRC_TPMOV_ID = :new.BEG_CRC_TPMOV_ID -- AOK -- 29/02/2008\n           where TC.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n             and TC.BEG_COBRADOR_ID = VREG2.BEG_COBRADOR_ID; -- AOK - 30/03/2007\n          ----------------------------------------------------\n        else\n          update BEG_CRC_TITULO C\n             set C.VLR_ABERTO   = C.VLR_ABERTO + :new.VLR_MOVTO,\n                 C.VLR_MULTA    = C.VLR_MULTA - :new.VLR_MULTA,\n                 C.VLR_JUROS    = C.VLR_JUROS - :new.VLR_JUROS,\n                 C.VLR_DESCONTO = C.VLR_DESCONTO - :new.VLR_DESCONTO,\n                 C.VLR_REAJUSTE = NVL(C.VLR_REAJUSTE, 0) -\n                                  NVL(:new.VLR_REAJUSTE, 0),\n                 C.VLR_DESPESA  = NVL(C.VLR_DESPESA, 0) -\n                                  NVL(:new.VLR_DESPESA, 0)\n           where C.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID;\n        end if;\n        /*\n           Desfaz a baixa do titulo em beg_titulo_cobrador -- AOK - 17/03/2008\n        */\n        update BEG_TITULO_COBRADOR TC\n           set TC.VLR_ABERTO        = NVL(TC.VLR_ABERTO, 0) + :new.VLR_MOVTO,\n               TC.VLR_PAGTO         = NVL(TC.VLR_PAGTO, 0) -\n                                      (:new.VLR_MOVTO +\n                                       NVL(:new.VLR_MULTA, 0) +\n                                       NVL(:new.VLR_JUROS, 0) -\n                                       NVL(:new.VLR_DESCONTO, 0)),\n               TC.DT_PAGTO          = TC.DT_PAGTO_ANT,\n               TC.IND_ENVIADO       = case when (select C.IND_ATUACAO\n                             from BEG_COBRADOR C\n                            where C.BEG_COBRADOR_ID =\n                                  TC.BEG_COBRADOR_ID) = 'A' then 'N' else TC.IND_ENVIADO end,\n               TC.DT_ENVIO          = case when (select C.IND_ATUACAO\n                             from BEG_COBRADOR C\n                            where C.BEG_COBRADOR_ID =\n                                  TC.BEG_COBRADOR_ID) = 'A' then null else TC.DT_ENVIO end,\n               TC.BEG_CRC_TPMOV_ID  = TC.ID_MOTIVO_ANT,\n               TC.DESC_MOTIVO       = null,\n               TC.DT_BAIXA_COBRANCA = null\n         where TC.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n           and TC.BEG_COBRADOR_ID = VREG2.BEG_COBRADOR_ID;\n        ----------------------------------------------------\n        --\n        -- AOK - 27/04/2006 - Assinala que o titulo foi renegociado qdo este estiver em cobranca\n        -- AOK -- 19/03/2008 - Procedimento foi alterado e passado para a trigger die_trg_bu_crc_historico\n        /*        if VREG1.TP_PGTO in ('R') then\n                  update BEG_TITULO_COBRADOR TC\n                     set TC.IND_RENEGOCIADO = 'Y'\n                   where TC.BEG_CRC_TITULO_ID = :new.BEG_CRC_TITULO_ID\n                     and TC.BEG_COBRADOR_ID = VREG2.BEG_COBRADOR_ID; -- AOK - 30/03/2007\n                end if;\n        */\n      end if;\n    end if;\n    -- Busca a sequencia para o registro de inclusao de historico\n    /*    open BUSCA_SEQ;\n    fetch BUSCA_SEQ\n      into VREG3;\n    close BUSCA_SEQ;\n    :new.SEQ_PGTO := VREG3.SEQ_PGTO;  */\n  \n    -- Este if foi inserido para acertos por fora e foi usado para baixas por prc_baixa_titulo - AOK\n    /*if :new.CREATED > TO_DATE('12/11/2006', 'dd/mm/yyyy') then\n      open BUSCA_SEQ;\n      fetch BUSCA_SEQ\n        into VREG3;\n      if BUSCA_SEQ%notfound then\n        :new.SEQ_PGTO := 1;\n        insert into BEG_CRC_SEQ_HIST\n          (BEG_CRC_SEQ_HIST_ID,\n           AD_CLIENT_ID,\n           AD_ORG_ID,\n           ISACTIVE,\n           value,\n           CREATED,\n           CREATEDBY,\n           UPDATED,\n           UPDATEDBY,\n           SEQ_BAIXA)\n        values\n          (BEG_FNC_AD_SEQUENCE('BEG_CRC_SEQ_HIST'),\n           :new.AD_CLIENT_ID,\n           :new.AD_ORG_ID,\n           'Y',\n           1,\n           sysdate,\n           0,\n           sysdate,\n           0,\n           :new.SEQ_PGTO);\n      else\n        :new.SEQ_PGTO := VREG3.SEQ_BAIXA + 1;\n        update BEG_CRC_SEQ_HIST\n           set SEQ_BAIXA = :new.SEQ_PGTO\n         where current of BUSCA_SEQ;\n      end if;\n    end if\n    ;*/ -- if :new.CREATED > TO_DATE('12/11/2006', 'dd/mm/yyyy') then\n    --\n  end if;\n\nend;\n"}`;
    
    }
}
