
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Models
{
    public class BEG_CEL_LOTE
    {

        [NotMapped]
        public string Trigger_BEG_TRG_BIUD_CEL_LOTE { get; set; } = `{"triggering_event":"INSERT OR UPDATE OR DELETE","trigger_body":"declare\n  /*------------------------------------------------------------------------------------------------\n    Objetivo(s)..: Trigger que troca o campo de descrição para upper case e valida os dados inseridos\n                   em um lote de processamento\n    Módulo.......: CEL - Celulares\n    Analista.....: Tiago Gabriel\n    Alterações:\n    Data        Desenvolvedor  Alteração\n    08/11/2007  Tiago Gabriel  Criação.\n    ------------------------------------------------------------------------------------------------*/\n  vc_description     beg_cel_tpmov.description%Type;\n  vc_ind_destino     beg_cel_tpmov.ind_destino%Type;\n  vc_ind_complemento beg_cel_tpmov.ind_complemento%Type;\n  vc_ind_filial      beg_cel_destino.ind_filial%Type;\n  vc_ind_operadora   beg_cel_destino.ind_operadora%Type;\n\nbegin\n  if deleting then\n    beg_pck_cel_celulares.vb_exclui_lote := true;\n\n    delete from beg_cel_ocorrencia\n     where beg_cel_lote_id = :old.beg_cel_lote_id;\n\n    delete from beg_cel_lote_item\n     where beg_cel_lote_id = :old.beg_cel_lote_id;\n\n    beg_pck_cel_celulares.vb_exclui_lote := false;\n\n    return;\n  end if;\n\n  if updating( 'QTD_TOTAL' ) then\n    return;\n  end if;\n\n  -- Se não informou tipo do movimento, inicializa\n  if :new.beg_cel_tpmov_id is null then\n    :new.beg_cel_tpmov_id := BEG_FNC_Retorna_Param_Geral( 'Produto'\n                                                        , 'Celular'\n                                                        , 'TPMOV_LOTE' );\n    -- Se não encontrar o parâmetro, retorna erro\n    if Nvl( :new.beg_cel_tpmov_id, 0 ) = 0 then\n      Raise_Application_Error( -20001, 'Tipo de movimento não informado ou não parametrizado!' );\n    end if;\n  end if;\n\n  -- Valida as obrigatoriedades do tipo de movimento\n  select description\n       , ind_destino\n       , ind_complemento\n    into vc_description\n       , vc_ind_destino\n       , vc_ind_complemento\n    from beg_cel_tpmov\n   where beg_cel_tpmov_id = :new.beg_cel_tpmov_id;\n\n  if vc_ind_destino = 'Y'            and\n     :new.beg_cel_destino_id is null then\n\n    -- Se destino é obrigatório e não informou, inicializa\n    :new.beg_cel_destino_id := BEG_FNC_Retorna_Param_Geral( 'Produto'\n                                                          , 'Celular'\n                                                          , 'DESTINO_LOTE' );\n    -- Se não encontrar o parâmetro, retorna erro\n    if Nvl( :new.beg_cel_destino_id, 0 ) = 0 then\n      Raise_Application_Error( -20001, 'Tipo de movimento obriga destino e este não foi informado ou parâmetro não foi encontrado!' );\n    end if;\n\n  end if;\n\n  if vc_ind_complemento = 'Y'     and\n     :new.des_complemento is null then\n    Raise_Application_Error( -20001, 'Tipo de movimento requer que o complemento seja informado!' );\n  end if;\n\n  -- Valida as obrigatoriedades do destino\n  if :new.beg_cel_destino_id is not null then\n    select ind_complemento\n         , ind_filial\n         , ind_operadora\n      into vc_ind_complemento\n         , vc_ind_filial\n         , vc_ind_operadora\n      from beg_cel_destino\n     where beg_cel_destino_id = :new.beg_cel_destino_id;\n\n    if vc_ind_complemento = 'Y'     and\n       :new.des_complemento is null then\n      Raise_Application_Error( -20001, 'Destino requer que o complemento seja informado!' );\n    end if;\n\n    if vc_ind_filial = 'Y'           and\n       :new.beg_vw_ad_org_id is null then\n\n      -- Se filial é obrigatória e não informou, inicializa\n      :new.beg_vw_ad_org_id := BEG_FNC_Retorna_Param_Geral( 'Produto'\n                                                          , 'Celular'\n                                                          , 'FILIAL_DESTINO_LOTE' );\n      -- Se não encontrar o parâmetro, retorna erro\n      if Nvl( :new.beg_vw_ad_org_id, 0 ) = 0 then\n        Raise_Application_Error( -20001, 'Destino obriga filial e esta não foi informada ou parâmetro não foi encontrado!' );\n      end if;\n    end if;\n\n    if vc_ind_operadora = 'Y'            and\n       :new.beg_cel_operadora_id is null then\n\n      -- Se operadora é obrigatória e não informou, inicializa\n      :new.beg_cel_operadora_id := BEG_FNC_Retorna_Param_Geral( 'Produto'\n                                                              , 'Celular'\n                                                              , 'OPERADORA_DESTINO_LOTE' );\n      -- Se não encontrar o parâmetro, retorna erro\n      if Nvl( :new.beg_cel_operadora_id, 0 ) = 0 then\n        Raise_Application_Error( -20001, 'Destino obriga operadora e esta não foi informada ou parâmetro não foi encontrado!' );\n      end if;\n\n    end if;\n\n  end if;\n\n  :new.description := Upper( Nvl( :new.description, vc_description ) );\n\n  -- Se arquivo não foi informado, ajusta conteúdo do processamento deste\n  if :new.des_arquivo is null then\n    :new.prc_arquivo := 'N';\n  end if;\n\nexception\n  when no_data_found then\n    Raise_Application_Error( -20001, 'Tipo de movimento ou destino não encontrados!' );\n\n  when too_many_rows then\n    Raise_Application_Error( -20001, 'Tipo de movimento ou destino duplicados!' );\n\nend BEG_TRG_BIUD_CEL_LOTE;\n"}`;
    
    }
}
