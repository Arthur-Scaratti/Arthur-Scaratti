
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Models
{
    public class DIE_PRD_GERADOR
    {

        [NotMapped]
        public string Trigger_DIE_TRG_BIUD_PRD_GERADOR { get; set; } = `{"triggering_event":"INSERT OR UPDATE OR DELETE","trigger_body":"declare\n  /*---------------------------------------------------------------------------------------------------\n  Objetivo(s)..: Trigger que insere as cores na gerac?o de produtos novos.\n  Módulo.......: PRD - Produto\n  Analista.....: Tiago Gabriel\n  Alterações:\n  Data        Desenvolvedor    Alteração\n  12/07/2007  Tiago Gabriel    Criação.\n  18/09/2007  Tiago Gabriel    Adicionada validação referente geração de produtos na voltagem 110.\n  10/09/2008  Tiago Gabriel    Adicionada verificação da marcação de código ESPECIAL, ENCOMENDA, \n                               RESERVADO e MANUAL.\n  07/04/2009  Jailson Tavares  Adicionada a restrição para não permitir o uso de acentos e caracteres\n                               especiais.\n  05/05/2009  Aroldo O. Krul   Correção de falha - estava movendo descr.resumida no lugar da detalhada                               \n  ---------------------------------------------------------------------------------------------------*/\n  VC_IND_PERMITE_COR      DIE_PRD_GRUPO.IND_PERMITE_COR%type;\n  VC_IND_PERMITE_VOLTAGEM DIE_PRD_GRUPO.IND_PERMITE_VOLTAGEM%type;\n  VN_DUMMY                number;\n\nbegin\n  -- Se esta processando da insersão, não executa a trigger\n  if BEG_PCK_PRD_PRODUTOS.VB_PRD_GERADOR then\n    return;\n  end if;\n\n  -- Se esta excluindo, ou atualizando o produto, limpa as cores anteriores para incluir as novas\n  if DELETING\n     or UPDATING('DIE_VW_PRD_PAI_ID') then\n    delete from DIE_PRD_GERADOR_COR\n     where DIE_PRD_GERADOR_ID = :old.DIE_PRD_GERADOR_ID;\n  \n    -- Se esta excluindo retorna\n    if DELETING then\n      return;\n    end if;\n  end if;\n\n  -- Se não informou o produto pai, valida os dados para inclusão de um produto novo\n  if :new.DIE_VW_PRD_PAI_ID is null then\n    -- Valida o código e dados\n    if UPDATING('DIE_COD_PRODUTO')\n       and :new.DIE_COD_PRODUTO is null then\n      :new.IND_GERADO := 'N';\n      :new.IND_MANUAL := 'N';\n    end if;\n  \n    BEG_PCK_PRD_PRODUTOS.PRC_CODIGO_OK(:new.DIE_COD_PRODUTO,\n                                       :new.DIE_PRD_GRUPO_ID,\n                                       :new.BEG_PRD_FABRICANTE_ID,\n                                       :new.IND_GERA_VOLTAGEM,\n                                       :new.IND_ESPECIAL,\n                                       :new.IND_ENCOMENDA,\n                                       :new.IND_RESERVADO,\n                                       :new.IND_MANUAL,\n                                       :new.IND_GERADO,\n                                       :new.IND_COMPLETA,\n                                       BEG_PCK_PRD_PRODUTOS.VC_MSG_ERRO);\n  \n    if BEG_PCK_PRD_PRODUTOS.VC_MSG_ERRO is not null then\n      RAISE_APPLICATION_ERROR(-20001, BEG_PCK_PRD_PRODUTOS.VC_MSG_ERRO);\n    end if;\n  \n    if :new.DIE_PRD_SUBGRUPO_ID is null then\n      RAISE_APPLICATION_ERROR(-20001, 'Subgrupo deve ser informado!');\n    end if;\n  \n    if :new.BEG_PRD_UNIDADE_ID is null then\n      RAISE_APPLICATION_ERROR(-20001, 'Unidade deve ser informada!');\n    end if;\n  \n    if :new.DESC_RESUMIDA is null then\n      RAISE_APPLICATION_ERROR(-20001,\n                              'Descrição resumida deve ser informada!');\n    end if;\n  \n    if :new.BEG_PRD_NCM_ID is null then\n      RAISE_APPLICATION_ERROR(-20001, 'NCM deve ser informadà!');\n    end if;\n  \n    if :new.BEG_FIS_ORIGEM_MERC_ID is null then\n      RAISE_APPLICATION_ERROR(-20001, 'Origem deve ser informada!');\n    end if;\n  \n    -- Verifica hierarquia entre grupo e subgrupo\n    /* Tiago Gabriel em 17/09/2008\n       Foram adicionadas FKs para grupo e subgrupo.\n       O vínculo é garantido pela UK na tabela de SubGrupo.\n    if :new.die_prd_grupo_id    is not null and\n       :new.die_prd_subgrupo_id is not null then\n      begin\n        select 1\n          into vn_dummy\n          from die_prd_subgrupo\n         where die_prd_subgrupo_id = :new.die_prd_subgrupo_id\n           and die_prd_grupo_id    = :new.die_prd_grupo_id;\n    \n      exception\n        when no_data_found then\n          Raise_Application_error( -20001, 'Relação entre grupo e subgrupo não encontrada!' );\n    \n        when too_many_rows then\n          Raise_Application_Error( -20001, 'Relação entre grupo e subgrupo duplicada!' );\n    \n      end;\n    end if;\n    */\n  \n    -- JT 07/04/2009  não permitir o uso de acentos e caracteres especiais\n  \n    /*:new.DESC_RESUMIDA  := UPPER(:new.DESC_RESUMIDA);\n    :new.DESC_DETALHADA := UPPER(:new.DESC_DETALHADA);*/\n  \n    if INSERTING\n       or UPDATING then\n      :new.DESC_RESUMIDA := trim(UPPER(BEG_PCK_UTIL.CONVERTE_ACENTOS(:new.DESC_RESUMIDA)));\n      if :new.nro_volume=0 then RAISE_APPLICATION_ERROR(-20001,\n                              'Numero de volumes deve ser maior que zero!');\n      end if;                              \n       if :new.nro_meses_garantia=0  and :new.die_prd_grupo_id not in (1000002,1000008,1000009,1000007,1000013,1000006) then \n         RAISE_APPLICATION_ERROR(-20001,\n                              'Numero de meses de garantia deve ser maior que zero!');\n       end if;                               \n      \n      \n      --      :new.DESC_DETALHADA := trim(:new.DESC_RESUMIDA); -- AOK - 05/05/09\n      :new.DESC_DETALHADA := trim(UPPER(BEG_PCK_UTIL.CONVERTE_ACENTOS(:new.DESC_DETALHADA))); -- AOK - 05/05/09\n    end if;\n  \n\n\n\n    -- JT 07/04/2009\n  \n    -- Busca os dados do grupo\n    if :new.DIE_PRD_GRUPO_ID is not null then\n      select IND_PERMITE_COR\n        into VC_IND_PERMITE_COR\n        from DIE_PRD_GRUPO\n       where DIE_PRD_GRUPO_ID = :new.DIE_PRD_GRUPO_ID;\n    end if;\n  \n  else\n    -- Se informou o produto, valida somente a inclusão de cores\n  \n    -- Busca os dados do grupo\n    select G.IND_PERMITE_COR,\n           G.IND_PERMITE_VOLTAGEM\n      into VC_IND_PERMITE_COR,\n           VC_IND_PERMITE_VOLTAGEM\n      from BEG_PRODUTO   P,\n           DIE_PRD_GRUPO G\n     where P.DIE_PRD_GRUPO_ID = G.DIE_PRD_GRUPO_ID\n       and P.BEG_PRODUTO_ID = :new.DIE_VW_PRD_PAI_ID;\n  \n    if VC_IND_PERMITE_COR = 'N'\n       and :new.IND_INCLUI_VOLTAGEM = 'N' then\n      RAISE_APPLICATION_ERROR(-20001,\n                              'Grupo não permite cadastramento de cores!');\n    end if;\n  \n    if :new.IND_INCLUI_VOLTAGEM = 'Y'\n       and VC_IND_PERMITE_VOLTAGEM = 'N' then\n      RAISE_APPLICATION_ERROR(-20001,\n                              'Grupo não permite cadastramento de voltagem!');\n    end if;\n  \n    if :new.IND_INCLUI_VOLTAGEM = 'Y' then\n      select count(1)\n        into VN_DUMMY\n        from BEG_PRODUTO P,\n             BEG_PRODUTO F\n       where P.BEG_PRODUTO_ID = F.DIE_VW_PRD_PAI_ID\n         and F.DIE_COD_ESTRUTURADO =\n             SUBSTR(F.DIE_COD_ESTRUTURADO, 1, 4) ||\n             DECODE(SUBSTR(P.DIE_COD_ESTRUTURADO, 5, 1), '0', '8', '1', '9') ||\n             SUBSTR(F.DIE_COD_ESTRUTURADO, 6, 2)\n         and P.BEG_PRODUTO_ID = :new.DIE_VW_PRD_PAI_ID;\n    \n      if VN_DUMMY > 0 then\n        RAISE_APPLICATION_ERROR(-20001,\n                                'Produto já possui filho na vltagem 110!');\n      end if;\n    \n    end if;\n  \n    -- Zera campos se o produto foi informado\n    :new.DESC_RESUMIDA          := null;\n    :new.DESC_DETALHADA         := null;\n    :new.IND_GERA_VOLTAGEM      := 'N';\n    :new.IND_SERIAL             := 'N';\n    :new.IND_ESPECIAL           := 'N';\n    :new.IND_ENCOMENDA          := 'N';\n    :new.IND_RESERVADO          := 'N';\n    :new.IND_MANUAL             := 'N';\n    :new.NRO_MESES_GARANTIA     := null;\n    :new.NRO_VOLUME             := null;\n    :new.QTD_PESO               := null;\n    :new.DIE_COD_PRODUTO        := null;\n    :new.BEG_VW_FORNECEDOR_ID   := null;\n    :new.DIE_PRD_GRUPO_ID       := null;\n    :new.DIE_PRD_SUBGRUPO_ID    := null;\n    :new.BEG_PRD_TIPO_ID        := null;\n    :new.BEG_PRD_UNIDADE_ID     := null;\n    :new.BEG_PRD_NCM_ID         := null;\n    :new.BEG_FIS_ORIGEM_MERC_ID := null;\n    :new.BEG_PRD_FABRICANTE_ID  := null;\n    :new.BEG_PRD_MARCA_ID       := null;\n    :new.BEG_CEL_PLANO_ID       := null;\n  \n  end if;\n\n  -- Como o grupo passou a ser opcional, somente insere as cores se este for informado\n  if VC_IND_PERMITE_COR = 'Y' then\n    -- Insere as cores que ainda não tem no produto\n    insert into DIE_PRD_GERADOR_COR GC\n      (GC.DIE_PRD_GERADOR_COR_ID,\n       GC.AD_CLIENT_ID,\n       GC.AD_ORG_ID,\n       GC.ISACTIVE,\n       GC.CREATEDBY,\n       GC.UPDATEDBY,\n       GC.DIE_PRD_GERADOR_ID,\n       GC.BEG_PRD_COR_ID)\n      select BEG_FNC_AD_SEQUENCE('DIE_PRD_GERADOR_COR') -- die_prd_gerador_cor_id\n            ,\n             :new.AD_CLIENT_ID -- ad_client_id\n            ,\n             :new.AD_ORG_ID -- ad_org_id\n            ,\n             'N' -- isactive\n            ,\n             :new.UPDATEDBY -- createdby\n            ,\n             :new.UPDATEDBY -- updatedby\n            ,\n             :new.DIE_PRD_GERADOR_ID -- die_prd_gerador_id\n            ,\n             C.BEG_PRD_COR_ID -- beg_prd_cor_id\n        from BEG_PRD_COR C\n       where (not exists\n              (select 1\n                 from BEG_PRODUTO P\n                where P.DIE_VW_PRD_PAI_ID = NVL(:new.DIE_VW_PRD_PAI_ID, 0)\n                  and p.isactive='Y'\n                  and NVL(SUBSTR(P.DIE_COD_ESTRUTURADO, 8), '^') = C.value) or\n              :new.DIE_VW_PRD_PAI_ID is null)\n         and not exists\n       (select 1\n                from DIE_PRD_GERADOR_COR G\n               where G.DIE_PRD_GERADOR_ID = :new.DIE_PRD_GERADOR_ID\n                 and G.BEG_PRD_COR_ID = C.BEG_PRD_COR_ID);\n  end if;\n\nend DIE_TRG_BIUD_PRD_GERADOR;\n"}`;
    
    }
}
