
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Models
{
    public class BEG_FIN_CAIXA_SALDO
    {
        
        /// <summary>
        /// 
        /// </summary>
        public int ID_SALDO_LOJA { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int TOTAL_ENTRADAS { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int TOTAL_SAIDAS { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int SALDO_ANTERIOR { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public string DATA_MOV { get; set; }
        
        /// <summary>
        /// 
        /// </summary>
        public int NRO_CAIXA { get; set; }
            [Required]
    [Key]
        /// <summary>
        /// 
        /// </summary>
        public int BEG_FIN_CAIXA_SALDO_ID { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int AD_CLIENT_ID { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int AD_ORG_ID { get; set; }
            [Required]
    [StringLength(1)]
        /// <summary>
        /// 
        /// </summary>
        public string ISACTIVE { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public string CREATED { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int CREATEDBY { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public string UPDATED { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int UPDATEDBY { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public string DATA { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int SALDO_REALIZADO { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int SALDO_PREVISTO { get; set; }
            [Required]
        /// <summary>
        /// 
        /// </summary>
        public int BEG_FIN_CAIXA_ID { get; set; }
            [Required]
        /// <summary>
        /// IP - Em progresso, CL-Completo
        /// </summary>
        public string DOCSTATUS { get; set; }

        [NotMapped]
        public string Trigger_DIE_TRG_BIU_CAIXA_SALDO { get; set; } = `{"triggering_event":"INSERT OR UPDATE","trigger_body":"DECLARE\n\n  CURSOR C1 IS\n    SELECT MAX(P.DIE_CARTAO_PARCELA_LJ_ID) DIE_CARTAO_PARCELA_ID,\n           AD_CLIENT_ID,\n           AD_ORG_ID,\n           ISACTIVE,\n           MAX(CREATED) CREATED,\n           MAX(CREATEDBY) CREATEDBY,\n           MAX(UPDATED) UPDATED,\n           MAX(UPDATEDBY) UPDATEDBY,\n           CDDUPL,\n           PARCELA,\n           CODIGO,\n           NRCUPOM,\n           DTEMISSAO,\n           DTVENCTO,\n           DTPAGTO,\n           SUM(NVL(VALOR, 0)) VALOR,\n           SUM(NVL(DESCONTO, 0)) DESCONTO,\n           SUM(NVL(JUROS, 0)) JUROS,\n           SITUACAO,\n           MAX(NRNF) NRNF,\n           MAX(SERIE) SERIE,\n           NRCAIXA,\n           OBSERVACAO,\n           CDCARTAO,\n           DTMOVIM,\n           NOME,\n           DTDEP,\n           SEQUENCIA,\n           NRAUTOR,\n           BEG_PESSOA_ID,\n           BEG_CRC_TITULO_ID,\n           DIE_CAR_TAXA_ID,\n           IND_ESTORNO,\n           SUM(NVL(VLR_TX_ADIANTAMENTO, 0)) VLR_TX_ADIANTAMENTO,\n           DTVENCTO_ORIG,\n           SUM(NVL(VALOR_ORIG, 0)) VALOR_ORIG,\n           SUM(NVL(DESCONTO_ORIG, 0)) DESCONTO_ORIG,\n           SUM(NVL(VLR_LIQUIDO, 0)) VLR_LIQUIDO,\n           COD_AUTORIZACAO_TEF,\n           NUMERO_RESUMO,\n           TID,\n           DT_ESTORNO,\n           IND_CONFERIDO,\n           DT_CONFERIDO,\n           NR_ANTECIPACAO,\n           DT_ANTECIPACAO,\n           DIE_CRC_RECIBO_ID,\n           SUM(NVL(VLR_VALE, 0)) VLR_VALE,\n           ENTREGA_B2W,\n           DIE_CARTAO_CR_VENDA_ID,\n           SUM(NVL(VLR_PARC_ADM, 0)) VLR_PARC_ADM,\n           MAX(ID_PARC_LOJA) ID_PARC_LOJA,\n           MAX(DIE_CAIXA_HIST_ID) DIE_CAIXA_HIST_ID\n    \n      FROM DIE_CARTAO_PARCELA_LJ P\n     WHERE P.IND_IMPORTADO = 'N'\n       AND P.AD_ORG_ID = :NEW.AD_ORG_ID\n       --AND P.DTEMISSAO = :NEW.DATA\n       AND P.DTDEP = :NEW.DATA\n       AND (P.SERIE IS NULL or p.serie = 'RC')\n     GROUP BY AD_CLIENT_ID,\n              AD_ORG_ID,\n              ISACTIVE,\n              CDDUPL,\n              PARCELA,\n              CODIGO,\n              NRCUPOM,\n              DTEMISSAO,\n              DTVENCTO,\n              DTPAGTO,\n              SITUACAO,\n              NRCAIXA,\n              OBSERVACAO,\n              CDCARTAO,\n              DTMOVIM,\n              NOME,\n              DTDEP,\n              SEQUENCIA,\n              NRAUTOR,\n              BEG_PESSOA_ID,\n              BEG_CRC_TITULO_ID,\n              DIE_CAR_TAXA_ID,\n              IND_ESTORNO,\n              DTVENCTO_ORIG,\n              COD_AUTORIZACAO_TEF,\n              NUMERO_RESUMO,\n              TID,\n              DT_ESTORNO,\n              IND_CONFERIDO,\n              DT_CONFERIDO,\n              NR_ANTECIPACAO,\n              DT_ANTECIPACAO,\n              DIE_CRC_RECIBO_ID,\n              ENTREGA_B2W,\n              DIE_CARTAO_CR_VENDA_ID\n    \n    UNION\n    SELECT MAX(P.DIE_CARTAO_PARCELA_LJ_ID) DIE_CARTAO_PARCELA_ID,\n           AD_CLIENT_ID,\n           AD_ORG_ID,\n           ISACTIVE,\n           MAX(CREATED) CREATED,\n           MAX(CREATEDBY) CREATEDBY,\n           MAX(UPDATED) UPDATED,\n           MAX(UPDATEDBY) UPDATEDBY,\n           MAX(CDDUPL) CDDUPL,\n           MAX(PARCELA) PARCELA,\n           CODIGO,\n           NRCUPOM,\n           DTEMISSAO,\n           DTVENCTO,\n           DTPAGTO,\n           SUM(NVL(VALOR, 0)) VALOR,\n           SUM(NVL(DESCONTO, 0)) DESCONTO,\n           SUM(NVL(JUROS, 0)) JUROS,\n           SITUACAO,\n           MAX(NRNF) NRNF,\n           MAX(SERIE) SERIE,\n           NRCAIXA,\n           OBSERVACAO,\n           CDCARTAO,\n           DTMOVIM,\n           NOME,\n           MAX(DTDEP) DTDEP,\n           SEQUENCIA,\n           NRAUTOR,\n           BEG_PESSOA_ID,\n           NULL BEG_CRC_TITULO_ID,\n           DIE_CAR_TAXA_ID,\n           IND_ESTORNO,\n           SUM(NVL(VLR_TX_ADIANTAMENTO, 0)) VLR_TX_ADIANTAMENTO,\n           DTVENCTO_ORIG,\n           SUM(NVL(VALOR_ORIG, 0)) VALOR_ORIG,\n           SUM(NVL(DESCONTO_ORIG, 0)) DESCONTO_ORIG,\n           SUM(NVL(VLR_LIQUIDO, 0)) VLR_LIQUIDO,\n           COD_AUTORIZACAO_TEF,\n           NUMERO_RESUMO,\n           TID,\n           DT_ESTORNO,\n           IND_CONFERIDO,\n           DT_CONFERIDO,\n           NR_ANTECIPACAO,\n           DT_ANTECIPACAO,\n           DIE_CRC_RECIBO_ID,\n           SUM(NVL(VLR_VALE, 0)) VLR_VALE,\n           ENTREGA_B2W,\n           DIE_CARTAO_CR_VENDA_ID,\n           SUM(NVL(VLR_PARC_ADM, 0)) VLR_PARC_ADM,\n           MAX(ID_PARC_LOJA) ID_PARC_LOJA,\n           MAX(DIE_CAIXA_HIST_ID) DIE_CAIXA_HIST_ID\n    \n      FROM DIE_CARTAO_PARCELA_LJ P\n     WHERE P.IND_IMPORTADO = 'N'\n       AND P.AD_ORG_ID = :NEW.AD_ORG_ID\n       --AND P.DTEMISSAO = :NEW.DATA\n       AND P.DTDEP = :NEW.DATA\n       AND P.SERIE IS NOT NULL\n       AND P.SERIE NOT IN ('RC')\n     GROUP BY AD_CLIENT_ID,\n              AD_ORG_ID,\n              ISACTIVE,\n              --              CDDUPL,\n              --              PARCELA,\n              CODIGO,\n              NRCUPOM,\n              DTEMISSAO,\n              DTVENCTO,\n              DTPAGTO,\n              SITUACAO,\n              NRCAIXA,\n              OBSERVACAO,\n              CDCARTAO,\n              DTMOVIM,\n              NOME,\n              --              DTDEP,\n              SEQUENCIA,\n              NRAUTOR,\n              BEG_PESSOA_ID,\n              --              NULL,\n              --              BEG_CRC_TITULO_ID,\n              DIE_CAR_TAXA_ID,\n              IND_ESTORNO,\n              DTVENCTO_ORIG,\n              COD_AUTORIZACAO_TEF,\n              NUMERO_RESUMO,\n              TID,\n              DT_ESTORNO,\n              IND_CONFERIDO,\n              DT_CONFERIDO,\n              NR_ANTECIPACAO,\n              DT_ANTECIPACAO,\n              DIE_CRC_RECIBO_ID,\n              ENTREGA_B2W,\n              DIE_CARTAO_CR_VENDA_ID\n    --              ID_PARC_LOJA;\n    \n    ;\n\nbegin\n\n  IF :NEW.DOCSTATUS = 'CL' THEN\n  \n    FOR X IN C1 LOOP\n      INSERT INTO DIE_CARTAO_PARCELA\n        (DIE_CARTAO_PARCELA_ID,\n         AD_CLIENT_ID,\n         AD_ORG_ID,\n         ISACTIVE,\n         CREATED,\n         CREATEDBY,\n         UPDATED,\n         UPDATEDBY,\n         CDDUPL,\n         PARCELA,\n         CODIGO,\n         NRCUPOM,\n         DTEMISSAO,\n         DTVENCTO,\n         DTPAGTO,\n         VALOR,\n         DESCONTO,\n         JUROS,\n         SITUACAO,\n         NRNF,\n         SERIE,\n         NRCAIXA,\n         OBSERVACAO,\n         CDCARTAO,\n         DTMOVIM,\n         NOME,\n         DTDEP,\n         SEQUENCIA,\n         NRAUTOR,\n         BEG_PESSOA_ID,\n         BEG_CRC_TITULO_ID,\n         DIE_CAR_TAXA_ID,\n         IND_ESTORNO,\n         VLR_TX_ADIANTAMENTO,\n         DTVENCTO_ORIG,\n         VALOR_ORIG,\n         DESCONTO_ORIG,\n         VLR_LIQUIDO,\n         COD_AUTORIZACAO_TEF,\n         NUMERO_RESUMO,\n         TID,\n         DT_ESTORNO,\n         IND_CONFERIDO,\n         DT_CONFERIDO,\n         NR_ANTECIPACAO,\n         DT_ANTECIPACAO,\n         DIE_CRC_RECIBO_ID,\n         VLR_VALE,\n         ENTREGA_B2W,\n         DIE_CARTAO_CR_VENDA_ID,\n         VLR_PARC_ADM,\n         ID_PARC_LOJA,\n         DIE_CAIXA_HIST_ID)\n      VALUES\n        (X.DIE_CARTAO_PARCELA_ID,\n         X.AD_CLIENT_ID,\n         X.AD_ORG_ID,\n         X.ISACTIVE,\n         X.CREATED,\n         X.CREATEDBY,\n         X.UPDATED,\n         X.UPDATEDBY,\n         X.CDDUPL,\n         CASE WHEN X.PARCELA='0' THEN '1' ELSE X.PARCELA END ,\n         X.CODIGO,\n         X.NRCUPOM,\n         X.DTDEP, --dt_emissao\n         X.DTVENCTO,\n         X.DTPAGTO,\n         X.VALOR,\n         X.DESCONTO,\n         X.JUROS,\n         X.SITUACAO,\n         X.NRNF,\n         X.SERIE,\n         X.NRCAIXA,\n         X.OBSERVACAO,\n         X.CDCARTAO,\n         X.DTMOVIM,\n         X.NOME,\n         X.DTDEP,\n         X.SEQUENCIA,\n         X.NRAUTOR,\n         X.BEG_PESSOA_ID,\n         X.BEG_CRC_TITULO_ID,\n         X.DIE_CAR_TAXA_ID,\n         X.IND_ESTORNO,\n         X.VLR_TX_ADIANTAMENTO,\n         X.DTVENCTO_ORIG,\n         X.VALOR_ORIG,\n         X.DESCONTO_ORIG,\n         X.VLR_LIQUIDO,\n         X.COD_AUTORIZACAO_TEF,\n         X.NUMERO_RESUMO,\n         X.TID,\n         X.DT_ESTORNO,\n         X.IND_CONFERIDO,\n         X.DT_CONFERIDO,\n         X.NR_ANTECIPACAO,\n         X.DT_ANTECIPACAO,\n         X.DIE_CRC_RECIBO_ID,\n         X.VLR_VALE,\n         X.ENTREGA_B2W,\n         X.DIE_CARTAO_CR_VENDA_ID,\n         X.VLR_PARC_ADM,\n         X.ID_PARC_LOJA,\n         X.DIE_CAIXA_HIST_ID);\n    \n      UPDATE DIE_CARTAO_PARCELA_LJ L\n         SET L.IND_IMPORTADO         = 'Y',\n             L.DIE_CARTAO_PARCELA_ID = X.DIE_CARTAO_PARCELA_ID\n       WHERE L.DTEMISSAO = X.DTEMISSAO\n         AND L.NRAUTOR = X.NRAUTOR\n         AND L.PARCELA = X.PARCELA\n         AND L.AD_ORG_ID = X.AD_ORG_ID;\n    \n    END LOOP;\n  \n  END IF;\n\nend;\n"}`;
    
        [NotMapped]
        public string Trigger_DIE_TRG_BU_CX_SALDO_DEPOSITOS { get; set; } = `{"triggering_event":"INSERT OR UPDATE","trigger_body":"DECLARE\n\n  pragma autonomous_transaction;\n\n  VDATA      DATE;\n  VPORTADOR  NUMBER;\n  V_DATA     DATE := NULL;\n  V_ID       NUMBER;\n  V_SALDO_ID NUMBER(10) := NULL;\n\n  -- CURSORES PARA CARREGAR DEPOSITOS BANCARIOS PARA TABELAS DOS BANCOS\n  CURSOR C1 IS\n    select m.CREATED,\n           m.CREATEDBY,\n           m.UPDATED,\n           m.UPDATEDBY,\n           P.BEG_BANCO_ID,\n           P.BEG_AGENCIA_ID,\n           P.BEG_FIN_CONTA_CORRENTE_ID,\n           P.NAME PORTADOR,\n           S.AD_ORG_ID BEG_VW_FILIAL_ID,\n           D.TIPO,\n           M.VLR_MOVIMENTO VALOR,\n           CASE\n             WHEN TO_CHAR(S.DATA, 'D') = 7 THEN  -- Quando sábado acrescenta dois dias na data do saldo\n              S.DATA + 2             \n             WHEN TO_CHAR(S.DATA, 'D') = 6 AND D.TIPO = 2 THEN --Quando deposito dia seguinte e dia semana sexta-feira acrescenta 3 dias na data do saldo\n              S.DATA + 3\n             WHEN TO_CHAR(S.DATA, 'D') BETWEEN 1 AND 5 AND D.TIPO = 2 THEN --Quando deposito dia seguinte for entre segunda e quinta acrescenta 1 dia na data do saldo\n              S.DATA + 1\n             ELSE\n              S.DATA\n           END DATA,\n           P.BEG_FIN_PORTADOR_ID,\n           M.NR_DEPOSITO,\n           S.NRO_CAIXA,\n           M.BEG_FIN_CAIXA_MOVIMENTO_ID\n      from die_deposito_hist       d,\n           beg_fin_caixa_movimento m,\n           beg_fin_caixa_saldo     s,\n           BEG_FIN_PORTADOR        P,\n           BEG_FIN_CAIXA_CONTA     C,\n           BEG_CPG_CONTA           CC\n     where s.beg_fin_caixa_saldo_id = m.beg_fin_caixa_saldo_id\n       and m.beg_fin_caixa_conta_id = d.beg_fin_caixa_conta_id\n       and m.beg_fin_caixa_historico_id = d.beg_fin_caixa_historico_id\n       AND M.BEG_FIN_CAIXA_CONTA_ID = C.BEG_FIN_CAIXA_CONTA_ID\n       AND C.BEG_CPG_CONTA_ID = CC.BEG_CPG_CONTA_ID\n       AND CC.BEG_CPG_CONTA_ID = P.BEG_CPG_CONTA_ID\n       AND M.BEG_FIN_CAIXA_SALDO_ID = :NEW.BEG_FIN_CAIXA_SALDO_ID\n       AND (M.REG_ESTORNADO_ID IS NULL OR M.IND_ESTORNO = 'N')\n       AND M.IND_INTEGRADO = 'N';\n\n  R1 C1%rowtype;\n\n  CURSOR busca_saldo IS\n    SELECT a.beg_fin_bco_saldo_id\n      FROM beg_fin_bco_saldo A\n     WHERE A.BEG_FIN_PORTADOR_ID = VPORTADOR\n       AND dt_saldo = VDATA;\n\n\n  -- CURSORES PARA CARREGAR CORRESPONDENTE BANCARIO\n  CURSOR C2 IS\n    SELECT C.DIE_FIN_CORRESP_ID\n      FROM DIE_FIN_CORRESP C\n     WHERE C.DATA = :NEW.DATA;\n  R2 C2%ROWTYPE;\n\n  CURSOR C3 IS\n    SELECT M.*\n      FROM BEG_FIN_CAIXA_MOVIMENTO M\n     WHERE M.BEG_FIN_CAIXA_SALDO_ID = :NEW.BEG_FIN_CAIXA_SALDO_ID\n       AND M.BEG_FIN_CAIXA_CONTA_ID = 2000042\n       AND M.BEG_FILIAL_ID NOT IN (1000016, 1000134)\n       and M.AD_ORG_ID NOT IN (0, 1000016, 1000134)\n       AND M.IND_INTEGRADO = 'N'\n       AND M.REG_ESTORNADO_ID IS NULL\n       AND M.IND_ESTORNO = 'N'\n       AND NOT EXISTS (SELECT 1\n              FROM BEG_FIN_CAIXA_MOVIMENTO E\n             WHERE E.REG_ESTORNADO_ID = M.ID_MOVTO_LOJA\n               AND E.AD_ORG_ID = M.AD_ORG_ID);\n\n  --- CURSOR PARA CARREGAR REMESSA NUMERARIOS PARA CAIXA TRANSITO\n\n  CURSOR C4 IS\n    SELECT M.*\n      FROM BEG_FIN_CAIXA_MOVIMENTO M\n     WHERE M.BEG_FIN_CAIXA_SALDO_ID = :NEW.BEG_FIN_CAIXA_SALDO_ID\n       AND M.BEG_FIN_CAIXA_CONTA_ID = 2000132\n       AND M.BEG_FILIAL_ID NOT IN (1000016, 1000134)\n       AND M.IND_INTEGRADO = 'N'\n       and M.AD_ORG_ID NOT IN (0, 1000016, 1000134)\n       AND M.TP_MOVTO = 'D'\n       AND ( /*M.REG_ESTORNADO_ID IS NULL OR*/\n            M.IND_ESTORNO = 'N')\n       AND NOT EXISTS (SELECT 1\n              FROM BEG_FIN_CAIXA_MOVIMENTO E\n             WHERE E.REG_ESTORNADO_ID = M.ID_MOVTO_LOJA\n               AND E.AD_ORG_ID = M.AD_ORG_ID);\n\n  CURSOR C5 IS\n    SELECT S.*\n      FROM BEG_FIN_CAIXA_SALDO S\n     WHERE S.DATA = V_DATA\n          --       AND S.AD_ORG_ID = 1000001\n       AND S.BEG_FIN_CAIXA_ID = 2000085;\n  R5 C5%ROWTYPE;\n\n  -- Cursor para carregar as saídas de caixa que tem recebimento via credito bancario\n  CURSOR C6 IS\n    SELECT M.*\n      FROM BEG_FIN_CAIXA_MOVIMENTO M, BEG_FIN_CAIXA_CONTA CC\n     WHERE M.BEG_FIN_CAIXA_SALDO_ID = :NEW.BEG_FIN_CAIXA_SALDO_ID\n       AND M.BEG_FIN_CAIXA_CONTA_ID = CC.BEG_FIN_CAIXA_CONTA_ID\n       AND CC.IND_CRED_BANCO = 'Y'\n          --AND M.BEG_FILIAL_ID NOT IN (1000016, 1000134)\n       AND M.IND_INTEGRADO = 'N'\n       AND M.TP_MOVTO = 'D'\n          --and M.AD_ORG_ID NOT IN (0,1000016, 1000134)\n       AND ( /*M.REG_ESTORNADO_ID IS NULL OR*/\n            M.IND_ESTORNO = 'N')\n       AND NOT EXISTS (SELECT 1\n              FROM BEG_FIN_CAIXA_MOVIMENTO E\n             WHERE E.REG_ESTORNADO_ID = M.ID_MOVTO_LOJA\n               AND E.AD_ORG_ID = M.AD_ORG_ID);\n\nBEGIN\n  IF :NEW.DOCSTATUS = 'CL' THEN\n    ---- INICIO CARGA DEPOSITOS\n    FOR R1 IN C1 LOOP\n    \n      V_SALDO_ID := null;\n      VPORTADOR  := R1.BEG_FIN_PORTADOR_ID;\n      VDATA      := R1.DATA;\n    \n      FOR X IN busca_saldo LOOP\n      \n        V_SALDO_ID := x.beg_fin_bco_saldo_id;\n      \n      END LOOP;\n    \n      IF V_SALDO_ID IS NULL THEN\n      \n        V_SALDO_ID := beg_fnc_ad_sequence('BEG_FIN_BCO_SALDO');\n      \n        INSERT INTO BEG_FIN_BCO_SALDO\n          (BEG_FIN_BCO_SALDO_ID,\n           AD_CLIENT_ID,\n           AD_ORG_ID,\n           ISACTIVE,\n           CREATED,\n           CREATEDBY,\n           UPDATED,\n           UPDATEDBY,\n           DT_SALDO,\n           SALDO_DIA_ANTERIOR,\n           TOTAL_DEBITOS,\n           TOTAL_CREDITOS,\n           SALDO_DIA,\n           BEG_BANCO_ID,\n           BEG_AGENCIA_ID,\n           BEG_FIN_CONTA_CORRENTE_ID,\n           DOCSTATUS,\n           BEG_FIN_PORTADOR_ID,\n           DT_TRANFERENCIA,\n           IND_TRANSFERENCIA)\n        VALUES\n          (V_SALDO_ID,\n           1000000, --AD_CLIENT_ID              ,\n           0, --AD_ORG_ID                 ,\n           'Y', --ISACTIVE                  ,\n           SYSDATE, --CREATED                   ,\n           R1.CREATEDBY,\n           SYSDATE, --UPDATED                   ,\n           R1.UPDATEDBY,\n           VDATA, --R1.DATA, --DT_SALDO                  ,\n           0, --SALDO_DIA_ANTERIOR        ,\n           0, --TOTAL_DEBITOS             ,\n           0, --TOTAL_CREDITOS            ,\n           0, --SALDO_DIA                 ,\n           R1.BEG_BANCO_ID,\n           R1.BEG_AGENCIA_ID,\n           R1.BEG_FIN_CONTA_CORRENTE_ID,\n           'WC', --DOCSTATUS                 ,\n           R1.BEG_FIN_PORTADOR_ID,\n           NULL, --DT_TRANFERENCIA           ,\n           NULL --IND_TRANSFERENCIA\n           );\n        COMMIT;\n      END IF;\n    \n      INSERT INTO BEG_FIN_BCO_MOVTO\n        (BEG_FIN_BCO_MOVTO_ID,\n         AD_CLIENT_ID,\n         AD_ORG_ID,\n         ISACTIVE,\n         CREATED,\n         CREATEDBY,\n         UPDATED,\n         UPDATEDBY,\n         VALUE,\n         BEG_BANCO_ID,\n         BEG_AGENCIA_ID,\n         BEG_FIN_CONTA_CORRENTE_ID,\n         TIPO_LANCTO,\n         VERB_CODIGO,\n         TIPO_MOV,\n         DATA_LANC,\n         DATA_COMP,\n         VALOR,\n         HISTORICO,\n         BEG_FIN_BCO_CONTA_ID,\n         BEG_VW_FILIAL_ID,\n         BEG_CHQ_CHEQUE_ID,\n         BEG_CPG_PGTO_MANUAL_ID,\n         DATA_IDENTIFICACAO,\n         BEG_VW_FIN_BCO_CONTA_ID,\n         DT_INTEGRACAO,\n         IND_INTEGRADO,\n         IND_ESTORNO,\n         BEG_FIN_BCO_SALDO_ID,\n         NR_DEPOSITO,\n         IND_IDENTIFICACAO,\n         VLR_ORIGEM,\n         IND_LOTE_CONVENIO,\n         IND_ORIGEM,\n         PORTADOR,\n         BEG_PCE_LOTE_PAGAMENTO_ID,\n         BEG_VEN_CONV_REC_FAT_LOT_ID,\n         BEG_CRC_PGTO_MANUAL_ID,\n         NRO_DOC,\n         BEG_CHQ_ALIQUOTA_ID,\n         BEG_CHQ_DEVOLVIDO_ID,\n         BEG_FIN_CAIXA_ID,\n         NRO_CHEQUE)\n      VALUES\n        (BEG_FNC_AD_SEQUENCE('BEG_FIN_BCO_MOVTO'),\n         1000000, --AD_CLIENT_ID        ,\n         0, --AD_ORG_ID           ,\n         'Y', --R1.ISACTIVE            ,\n         R1.CREATED,\n         R1.CREATEDBY,\n         R1.UPDATED,\n         R1.UPDATEDBY,\n         NULL, --R1.VALUE               ,\n         R1.BEG_BANCO_ID,\n         R1.BEG_AGENCIA_ID,\n         R1.BEG_FIN_CONTA_CORRENTE_ID,\n         'M', --R1.TIPO_LANCTO               ,\n         NULL, --R1.VERB_CODIGO               ,\n         'E', --R1.TIPO_MOV                  ,\n         VDATA, --R1.DATA, --DATA_LANC                 ,\n         NULL, --R1.DATA_COMP                 ,\n         R1.VALOR,\n         'DEPOSITO CX ' || R1.NRO_CAIXA, --R1.HISTORICO                 ,\n         1000010, --R1.BEG_FIN_BCO_CONTA_ID      ,\n         R1.BEG_VW_FILIAL_ID,\n         NULL, --R1.BEG_CHQ_CHEQUE_ID         ,\n         NULL, --R1.BEG_CPG_PGTO_MANUAL_ID    ,\n         NULL, -- R1.DATA_IDENTIFICACAO        ,\n         NULL, --R1.BEG_VW_FIN_BCO_CONTA_ID   ,\n         NULL, --R1.DT_INTEGRACAO             ,\n         NULL, --R1.IND_INTEGRADO             ,\n         NULL, --R1.IND_ESTORNO               ,\n         V_SALDO_ID,\n         R1.NR_DEPOSITO,\n         NULL, --R1.IND_IDENTIFICACAO         ,\n         NULL, --R1.VLR_ORIGEM                ,\n         NULL, --R1.IND_LOTE_CONVENIO         ,\n         NULL, --R1.IND_ORIGEM                ,\n         R1.PORTADOR,\n         NULL, --R1.BEG_PCE_LOTE_PAGAMENTO_ID ,\n         NULL, --R1.BEG_VEN_CONV_REC_FAT_LOT_ID,\n         NULL, --R1.BEG_CRC_PGTO_MANUAL_ID     ,\n         NULL, --R1.NRO_DOC                    ,\n         NULL, --R1.BEG_CHQ_ALIQUOTA_ID        ,\n         NULL, --R1.BEG_CHQ_DEVOLVIDO_ID       ,\n         NULL, --R1.BEG_FIN_CAIXA_ID           ,\n         NULL --R1.NRO_CHEQUE\n         );\n    \n      COMMIT;\n    \n      UPDATE BEG_FIN_CAIXA_MOVIMENTO M\n         SET M.IND_INTEGRADO = 'Y'\n       WHERE M.BEG_FIN_CAIXA_MOVIMENTO_ID = R1.BEG_FIN_CAIXA_MOVIMENTO_ID;\n    \n      COMMIT;\n    END LOOP;\n    ---- FIM CARGA DEDPOSITOS\n  \n    ---- INICIO CARGA CORRESPONDENTE BANCARIO\n    FOR Y IN C3 LOOP\n    \n      IF Y.BEG_FIN_CAIXA_MOVIMENTO_ID IS NOT NULL THEN\n      \n        OPEN C2;\n        FETCH C2\n          INTO R2;\n        CLOSE C2;\n      \n        IF R2.DIE_FIN_CORRESP_ID IS NULL THEN\n        \n          R2.DIE_FIN_CORRESP_ID := beg_fnc_ad_sequence('DIE_FIN_CORRESP');\n        \n          INSERT INTO DIE_FIN_CORRESP\n            (DIE_FIN_CORRESP_ID,\n             AD_CLIENT_ID,\n             AD_ORG_ID,\n             ISACTIVE,\n             CREATED,\n             CREATEDBY,\n             UPDATED,\n             UPDATEDBY,\n             DATA,\n             DOCSTATUS,\n             VALORTOTAL)\n          VALUES\n            (R2.DIE_FIN_CORRESP_ID,\n             1000000, --AD_CLIENT_ID       ,\n             0, --AD_ORG_ID          ,\n             'Y', --ISACTIVE           ,\n             Y.CREATED,\n             Y.CREATEDBY,\n             Y.UPDATED,\n             Y.UPDATEDBY,\n             :NEW.DATA,\n             'WC', --DOCSTATUS          ,\n             0 --VALORTOTAL\n             );\n        \n        END IF;\n        INSERT INTO DIE_FIN_CORRESP_MOV\n        \n          (DIE_FIN_CORRESP_MOV_ID,\n           DIE_FIN_CORRESP_ID,\n           AD_CLIENT_ID,\n           AD_ORG_ID,\n           ISACTIVE,\n           CREATED,\n           CREATEDBY,\n           UPDATED,\n           UPDATEDBY,\n           BEG_FILIAL_ID,\n           VALOR,\n           DOCSTATUS,\n           BEG_FIN_CAIXA_MOVIMENTO_ID,\n           BEG_FIN_CAIXA_SALDO_ID)\n        VALUES\n          (BEG_FNC_AD_SEQUENCE('DIE_FIN_CORRESP_MOV'),\n           R2.DIE_FIN_CORRESP_ID,\n           1000000, --AD_CLIENT_ID       ,\n           0, --AD_ORG_ID          ,\n           'Y', --ISACTIVE            ,\n           Y.CREATED,\n           Y.CREATEDBY,\n           Y.UPDATED,\n           Y.UPDATEDBY,\n           :NEW.AD_ORG_ID, --BEG_FILIAL_ID         ,\n           Y.VLR_MOVIMENTO, --VALOR                 ,\n           'IP', --DOCSTATUS             ,\n           Y.BEG_FIN_CAIXA_MOVIMENTO_ID,\n           :NEW.BEG_FIN_CAIXA_SALDO_ID);\n      END IF;\n    \n      UPDATE BEG_FIN_CAIXA_MOVIMENTO M\n         SET M.IND_INTEGRADO = 'Y'\n       WHERE M.BEG_FIN_CAIXA_MOVIMENTO_ID = Y.BEG_FIN_CAIXA_MOVIMENTO_ID;\n    \n    END LOOP;\n    --- FIM CARGA CORRESPONDENTE BANCARIO\n    --- INICIO CARGA REMESSA NUMERARIO PARA CAIXA TRANSITO\n    FOR Z IN C4 LOOP\n    \n      IF Z.BEG_FIN_CAIXA_MOVIMENTO_ID IS NOT NULL THEN\n      \n        V_DATA := Z.DATA_PREVISTA;\n      \n        OPEN C5;\n        FETCH C5\n          INTO R5;\n        CLOSE C5;\n      \n        IF R5.BEG_FIN_CAIXA_SALDO_ID IS NULL THEN\n        \n          V_ID := BEG_FNC_AD_SEQUENCE('BEG_FIN_CAIXA_SALDO');\n        \n          insert into BEG_FIN_CAIXA_SALDO\n            (BEG_FIN_CAIXA_SALDO_ID,\n             AD_CLIENT_ID,\n             AD_ORG_ID,\n             ISACTIVE,\n             CREATED,\n             CREATEDBY,\n             UPDATED,\n             UPDATEDBY,\n             DATA,\n             SALDO_REALIZADO,\n             SALDO_PREVISTO,\n             BEG_FIN_CAIXA_ID,\n             DOCSTATUS,\n             TOTAL_ENTRADAS,\n             TOTAL_SAIDAS,\n             SALDO_ANTERIOR,\n             DATA_MOV,\n             NRO_CAIXA,\n             ID_SALDO_LOJA)\n          values\n            (V_ID,\n             1000000,\n             1000001,\n             'Y',\n             SYSDATE,\n             1000000,\n             SYSDATE,\n             1000000,\n             V_DATA,\n             0,\n             0,\n             2000085,\n             'IP',\n             0,\n             0,\n             0,\n             NULL,\n             0,\n             NULL);\n        \n        ELSE\n          V_ID := R5.BEG_FIN_CAIXA_SALDO_ID;\n        END IF;\n      \n        INSERT INTO BEG_FIN_CAIXA_MOVIMENTO\n          (BEG_FIN_CAIXA_MOVIMENTO_ID,\n           BEG_FIN_CAIXA_ID,\n           AD_CLIENT_ID,\n           AD_ORG_ID,\n           ISACTIVE,\n           CREATED,\n           CREATEDBY,\n           UPDATED,\n           UPDATEDBY,\n           TP_LANCTO,\n           TP_MOVTO,\n           BEG_PESSOA_ID,\n           BEG_FIN_CAIXA_HISTORICO_ID,\n           BEG_FIN_CAIXA_CONTA_ID,\n           BEG_FILIAL_ID,\n           HISTORICO,\n           BEG_CRC_TITULO_ID,\n           BEG_CPG_TITULO_ID,\n           DATA_PREVISTA,\n           DATA_REALIZADA,\n           VLR_MOVIMENTO,\n           VLR_BAIXA,\n           VLR_JUROS,\n           VLR_DESCONTO,\n           VLR_MULTA,\n           FECHADO,\n           PESSOA_OBRIGATORIA,\n           TITULO_CRC_OBRIGATORIO,\n           TITULO_CPG_OBRIGATORIO,\n           CONTA_CORRENTE_OBRIGATORIA,\n           FILIAL_ORIGEM_OBRIGATORIA,\n           BEG_FIN_CONTA_CORRENTE_ID,\n           BEG_FIN_TIPO_DOCUMENTO_ID,\n           DOCUMENTO_OBRIGATORIO,\n           DOCUMENTO,\n           BEG_FIN_CC_MOVIMENTO_ID,\n           BEG_CPG_PGTO_MANUAL_ID,\n           LOTE_CPG_OBRIGATORIO,\n           DOCSTATUS,\n           BEG_FIN_CAIXA_SALDO_ID,\n           BEG_CHQ_CHEQUE_ID,\n           IND_CRC,\n           IND_CPG,\n           IND_CONFIRMACAO,\n           BEG_VW_FIN_CAIXA_HISTORICO_ID,\n           P_SERVICO,\n           BEG_VW_FIN_CAIXA_ID,\n           BEG_VEN_CONV_REC_FAT_LOT_ID,\n           BEG_CRC_PGTO_MANUAL_ID,\n           DIE_CRC_RECIBO_ID,\n           BEG_FAT_NFS_ID,\n           IND_INTEGRADO,\n           NR_DEPOSITO,\n           NOME_DO_CLIENTE,\n           CONTRATO,\n           SRDUP,\n           CLASSIF,\n           COD_BANCO,\n           NR_AGENCIA,\n           NR_CONTA,\n           PARCELA,\n           NR_RECIBO,\n           HISTORICO_OBS,\n           IND_ESTORNO,\n           REG_ESTORNADO_ID,\n           BEG_CRC_HISTORICO_ID,\n           NR_AUTENTICACAO,\n           ID_MOVTO_LOJA)\n        VALUES\n          (BEG_FNC_AD_SEQUENCE('BEG_FIN_CAIXA_MOVIMENTO'),\n           2000085, --BEG_FIN_CAIXA_ID            ,\n           Z.AD_CLIENT_ID,\n           1000001, --AD_ORG_ID                   ,\n           Z.ISACTIVE,\n           Z.CREATED,\n           Z.CREATEDBY,\n           Z.UPDATED,\n           Z.UPDATEDBY,\n           Z.TP_LANCTO,\n           Z.TP_MOVTO,\n           Z.BEG_PESSOA_ID,\n           2000001, --BEG_FIN_CAIXA_HISTORICO_ID  ,\n           2000017, --BEG_FIN_CAIXA_CONTA_ID      ,\n           Z.BEG_FILIAL_ID,\n           Z.HISTORICO || ' NR - ' || :NEW.NRO_CAIXA,\n           Z.BEG_CRC_TITULO_ID,\n           Z.BEG_CPG_TITULO_ID,\n           Z.DATA_PREVISTA,\n           Z.DATA_REALIZADA,\n           Z.VLR_MOVIMENTO,\n           Z.VLR_BAIXA,\n           Z.VLR_JUROS,\n           Z.VLR_DESCONTO,\n           Z.VLR_MULTA,\n           Z.FECHADO,\n           Z.PESSOA_OBRIGATORIA,\n           Z.TITULO_CRC_OBRIGATORIO,\n           Z.TITULO_CPG_OBRIGATORIO,\n           Z.CONTA_CORRENTE_OBRIGATORIA,\n           Z.FILIAL_ORIGEM_OBRIGATORIA,\n           Z.BEG_FIN_CONTA_CORRENTE_ID,\n           Z.BEG_FIN_TIPO_DOCUMENTO_ID,\n           Z.DOCUMENTO_OBRIGATORIO,\n           Z.DOCUMENTO,\n           Z.BEG_FIN_CC_MOVIMENTO_ID,\n           Z.BEG_CPG_PGTO_MANUAL_ID,\n           Z.LOTE_CPG_OBRIGATORIO,\n           'WP', --Z.DOCSTATUS,\n           V_ID,\n           Z.BEG_CHQ_CHEQUE_ID,\n           Z.IND_CRC,\n           Z.IND_CPG,\n           Z.IND_CONFIRMACAO,\n           2000001, --Z.BEG_VW_FIN_CAIXA_HISTORICO_ID,\n           Z.P_SERVICO,\n           2000070, --BEG_VW_FIN_CAIXA_ID          ,\n           Z.BEG_VEN_CONV_REC_FAT_LOT_ID,\n           Z.BEG_CRC_PGTO_MANUAL_ID,\n           Z.DIE_CRC_RECIBO_ID,\n           Z.BEG_FAT_NFS_ID,\n           Z.IND_INTEGRADO,\n           Z.NR_DEPOSITO,\n           Z.NOME_DO_CLIENTE,\n           Z.CONTRATO,\n           Z.SRDUP,\n           Z.CLASSIF,\n           Z.COD_BANCO,\n           Z.NR_AGENCIA,\n           Z.NR_CONTA,\n           Z.PARCELA,\n           Z.NR_RECIBO,\n           Z.HISTORICO_OBS || ' NR - ' || :NEW.NRO_CAIXA,\n           Z.IND_ESTORNO,\n           Z.REG_ESTORNADO_ID,\n           Z.BEG_CRC_HISTORICO_ID,\n           Z.NR_AUTENTICACAO,\n           null --Z.ID_MOVTO_LOJA\n           );\n      \n        UPDATE BEG_FIN_CAIXA_MOVIMENTO M\n           SET M.IND_INTEGRADO = 'Y'\n         WHERE M.BEG_FIN_CAIXA_MOVIMENTO_ID = Z.BEG_FIN_CAIXA_MOVIMENTO_ID;\n      END IF;\n    \n    END LOOP;\n  \n    --- FIM CARGA REMESSA NUMERARIO\n    ---INICIO CARGA DE SAIDAS COM CREDITO BANCARIO\n    FOR W IN C6 LOOP\n    \n      INSERT INTO DIE_FIN_CREDITO_BANCARIO\n        (DIE_FIN_CREDITO_BANCARIO_ID,\n         AD_ORG_ID,\n         AD_CLIENT_ID,\n         CREATED,\n         CREATEDBY,\n         UPDATED,\n         UPDATEDBY,\n         DATA,\n         BEG_FIN_CAIXA_CONTA_ID,\n         BEG_FIN_CAIXA_MOVIMENTO_ID,\n         VALOR,\n         VLR_ABERTO,\n         OBSERVACAO,\n         DOCSTATUS,\n         ISACTIVE)\n      VALUES\n        (BEG_FNC_AD_SEQUENCE('DIE_FIN_CREDITO_BANCARIO'),\n         W.AD_ORG_ID,\n         W.AD_CLIENT_ID,\n         W.CREATED,\n         W.CREATEDBY,\n         W.UPDATED,\n         W.UPDATEDBY,\n         :NEW.DATA, --DATA                       ,\n         W.BEG_FIN_CAIXA_CONTA_ID,\n         W.BEG_FIN_CAIXA_MOVIMENTO_ID,\n         W.VLR_MOVIMENTO, --VALOR                      ,\n         W.VLR_MOVIMENTO, --VLR_ABERTO                 ,\n         W.HISTORICO_OBS, --OBSERVACAO                 ,\n         'WC', --DOCSTATUS\n         'Y');\n    \n      UPDATE BEG_FIN_CAIXA_MOVIMENTO M\n         SET M.IND_INTEGRADO = 'Y'\n       WHERE M.BEG_FIN_CAIXA_MOVIMENTO_ID = W.BEG_FIN_CAIXA_MOVIMENTO_ID;\n    \n    END LOOP;\n  \n    --- FIM CARGA DE SAIDAS COM CREDITO BANCARIO\n    COMMIT;\n    ---- ATUALIZA STATUS PARA COMPLETO AFIM DE BLOQUEAR ALTERAÇÃO NO COMPIERE\n    IF :NEW.AD_ORG_ID NOT IN (1000134, 1000016, 0) THEN\n      UPDATE BEG_FIN_CAIXA_MOVIMENTO M\n         SET M.DOCSTATUS = 'CL'\n       WHERE M.BEG_FIN_CAIXA_SALDO_ID = :NEW.BEG_FIN_CAIXA_SALDO_ID;\n      COMMIT;\n    END IF;\n  \n  END IF;\n\nEND;\n"}`;
    
        [NotMapped]
        public string Trigger_BEG_TRG_BI_CAIXA_SLD { get; set; } = `{"triggering_event":"INSERT OR UPDATE","trigger_body":"DECLARE\n  --\n  pragma autonomous_transaction;\n  --\n  CURSOR C1 IS\n    SELECT 1\n      FROM BEG_FIN_CAIXA_SALDO X\n     WHERE X.DATA      > :NEW.DATA\n       AND X.DOCSTATUS = 'CL'\n       and x.ad_org_id = :new.ad_org_id\n       and x.beg_fin_caixa_id= :new.beg_fin_caixa_id;\n  R_C1 C1%ROWTYPE;\n  \n  --\n \n  --\n  VN NUMBER(10);\n  VC NUMBER(10);\n  VV DATE;\nBEGIN\n  VN := :NEW.AD_ORG_ID;\n  VC := :NEW.BEG_FIN_CAIXA_ID;\n  VV := :NEW.DATA;\n  --\n  IF INSERTING THEN\n  OPEN C1;\n  FETCH C1 INTO R_C1;\n    IF C1%FOUND THEN\n      RAISE_APPLICATION_ERROR(-20001,'Não pode inserir registros posteriores quando já possui fechados');\n    END IF;\n  CLOSE C1;\n  \n  END IF;\n  --\n  -- Abertura do caixa novo nao estava levando o saldo anterio. Já foi corrigido e nao precisa mais deste bloco.\n/*  IF NVL(:NEW.SALDO_ANTERIOR,0) = 0 THEN\n    \n    SELECT NVL(C.SALDO_REALIZADO,0) SALDO_REALIZADO\n     INTO :NEW.SALDO_ANTERIOR\n      FROM BEG_FIN_CAIXA_SALDO C\n     WHERE C.BEG_FIN_CAIXA_ID = :new.beg_fin_caixa_id\n       AND C.AD_ORG_ID        = :new.ad_org_id\n       AND C.DATA             = (select max(data) \n                                   from beg_fin_caixa_saldo a \n                                  where beg_fin_caixa_id = :new.beg_fin_caixa_id\n                                    and a.ad_org_id      = :new.ad_org_id\n                                    and a.data < :NEW.DATA);\n  \n  END IF;\n*/\nEND;\n"}`;
    
        [NotMapped]
        public string Trigger_BEG_TRG_BIUD_CAIXA_SLD { get; set; } = `{"triggering_event":"INSERT OR UPDATE OR DELETE","trigger_body":"DECLARE\n  --\n  CURSOR C1 IS\n    select 1\n      from BEG_FIN_CAIXA_MOVIMENTO x\n     where x.BEG_FIN_CAIXA_SALDO_ID = :OLD.BEG_FIN_CAIXA_SALDO_ID;\n  R_C1 C1%ROWTYPE;\n  --\n  VD_TESTE DATE;\n  --\n  vn_nro_caixa number(10);\n  --\n  V_ID_FIL NUMBER(10);\n\n  ---\n  cursor C_FECH_CONT is\n    select MAX(C.DT_FINAL) DT_FINAL from BEG_FECH_CONTABIL C;\n  --\n  R_FECH_CONT C_FECH_CONT%rowtype;\n  --\n  cursor C_FECH_CONT1 is\n    select ind_escrita\n      from BEG_FECH_CONTABIL C\n     where c.dt_final = R_FECH_CONT.DT_FINAL;\n  --\n  R_FECH_CONT1 C_FECH_CONT1%rowtype;\n  --\n  cursor C_FIL IS\n    SELECT F.DIE_PARAMETROS_FIL_ID\n      FROM DIE_PARAMETROS_FIL F\n     WHERE F.AD_ORG_ID = :NEW.AD_ORG_ID;\n  R_FIL C_FIL%ROWTYPE;\n\nBEGIN\n  --\n  OPEN C_FECH_CONT;\n  FETCH C_FECH_CONT\n    INTO R_FECH_CONT;\n  CLOSE C_FECH_CONT;\n  --\n  open C_FECH_CONT1;\n  fetch C_FECH_CONT1\n    into R_FECH_CONT1;\n  close C_FECH_CONT1;\n  --\n  VD_TESTE := :NEW.DATA;\n  --\n  IF :NEW.DATA <= R_FECH_CONT.DT_FINAL OR :OLD.DATA <= R_FECH_CONT.DT_FINAL THEN\n    if nvl(r_FECH_CONT1.ind_escrita, 'N') = 'N' then\n      RAISE_APPLICATION_ERROR(-20001,\n                              'Não pode deletar, alterar ou inserir registro quando fechamentos contabil está fechado!');\n    END IF;\n  END IF;\n  --\n  IF inserting THEN\n  \n    open C_FIL;\n    fetch C_FIL\n      into R_FIL;\n    close C_FIL;\n  \n    V_ID_FIL := R_FIL.DIE_PARAMETROS_FIL_ID;\n  \n    IF V_ID_FIL IS NULL THEN\n      :new.docstatus := 'IP';\n      :new.nro_caixa := beg_fnc_retorna_parametro(1000000 --:NEW.AD_CLIENT_ID\n                                                 ,\n                                                  :NEW.AD_ORG_ID,\n                                                  'Financeiro',\n                                                  'Caixa',\n                                                  'NRO_CAIXA');\n      --\n      UPDATE BEG_PARAMETRO_SISTEMA S\n         SET S.NUMERO = S.NUMERO + 1\n       WHERE S.NAME = 'NRO_CAIXA'\n         AND S.AD_ORG_ID = :NEW.AD_ORG_ID;\n    \n    END IF;\n    --\n  END IF;\n  --\n  IF DELETING THEN\n    --\n    IF :OLD.DOCSTATUS = 'CL' THEN\n      RAISE_APPLICATION_ERROR(-20001,\n                              'Não pode deletar Saldo Caixa já fechada');\n    END IF;\n    --    \n    OPEN C1;\n    FETCH C1\n      INTO R_C1;\n    IF C1%FOUND THEN\n      RAISE_APPLICATION_ERROR(-20001,\n                              'Não pode deletar Saldos Caixa, possui Movimentos!');\n      CLOSE C1;\n    END IF;\n    --\n  END IF;\n  --\nEND;\n"}`;
    
    }
}
