
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Models
{
    public class BEG_CPR_NFE_ITEM_FISCAL
    {

        [NotMapped]
        public string Trigger_BEG_TRG_BU_NFE_ITEM_FISCAL { get; set; } = `{"triggering_event":"UPDATE","trigger_body":"declare\n  /* ---------------------------------------------------------------------------------------------------\n   Objetivo(s)..: Trigger de validacoes\n   Modulo.......: FIS - Fiscal\n   Analista.....: Aroldo de Oliveira Krul\n   Alteracoes:\n   Data        Desenvolvedor  Alteracao\n   25/05/2011  Aroldo O.Krul  Criacao.\n   25/08/2011  Aroldo O.Krul  IMplementacao da manutencao do pis e cofins\n   07/11/2011  Aroldo O.Krul  Implementacao da manutencao do IPI\n   08/11/2011  Aroldo O.Krul  Nova passagem de parammetro para a funcao beg_fnc_gera_cod_sit_trib\n  --------------------------------------------------------------------------------------------------- */\n  VC_MSG_ERRO varchar2(200);\n  VN_AUX_CALC number(18, 4) := 0;\n  --\n  cursor CNOTA is\n    select *\n      from BEG_CPR_NFE_FISCAL NF\n     where NF.BEG_CPR_NFE_FISCAL_ID = :NEW.BEG_CPR_NFE_FISCAL_ID;\n  RNOTA CNOTA%rowtype;\n  -- aok - 25/08/2011 --------------------------------------\n  cursor CCP(PBEG_FIS_CST_PIS_ID number) is\n    select *\n      from BEG_FIS_CST_PIS CP\n     where CP.BEG_FIS_CST_PIS_ID = PBEG_FIS_CST_PIS_ID;\n  RCP CCP%rowtype;\n  -- aok - 25/08/2011 --------------------------------------\n  cursor CCC(PBEG_FIS_CST_COFINS_ID number) is\n    select *\n      from BEG_FIS_CST_COFINS CC\n     where CC.BEG_FIS_CST_COFINS_ID = PBEG_FIS_CST_COFINS_ID;\n  RCC CCC%rowtype;\n  -- aok - 07/11/2011 --------------------------------------\n  cursor CCIPI(PBEG_FIS_CST_IPI_ID number) is\n    select *\n      from BEG_FIS_CST_IPI CC\n     where CC.BEG_FIS_CST_IPI_ID = PBEG_FIS_CST_IPI_ID;\n  RCIPI CCIPI%rowtype;\n  -- aok - 08/09/2011 --------------------------------------\n  cursor CCFOCST is\n    select NVL(C.BEG_FIS_CST_PIS_ID, B.BEG_FIS_CST_PIS_ID) BEG_FIS_CST_PIS_ID,\n           NVL(C.BEG_FIS_CST_COFINS_ID, B.BEG_FIS_CST_COFINS_ID) BEG_FIS_CST_COFINS_ID,\n           NVL(C.BEG_FIS_CST_IPI_ID, B.BEG_FIS_CST_IPI_ID) BEG_FIS_CST_IPI_ID\n      from BEG_CFOP             B,\n           BEG_FIS_CFOP_NCM_CST C\n     where B.BEG_CFOP_ID = :NEW.BEG_VW_CFOP_ENT_ID\n       and C.BEG_CFOP_ID(+) = B.BEG_CFOP_ID\n       and C.BEG_PRD_NCM_ID(+) = :NEW.BEG_PRD_NCM_ID\n       and C.ISACTIVE(+) = 'Y';\n  RCFOCST CCFOCST%rowtype;\n  -- aok - 08/11/2011\n  --cursor CCFO(PBEG_CFOP_ID number) is\n  --  select * from BEG_CFOP C where C.BEG_CFOP_ID = PBEG_CFOP_ID;\n  --RCFO CCFO%rowtype;\n  --\nbegin\n  -- se false goto fim\n  if BEG_PCK_CPR_COMPRAS.VB_PROC_ACERTO_ESPECIAL then\n    goto FIM;\n  end if;\n  --\n  open CNOTA;\n  fetch CNOTA\n    into RNOTA;\n  close CNOTA;\n  --\n  /*  if :NEW.ALQ_ICMS <> :OLD.ALQ_ICMS then\n  if :NEW.ALQ_ICMS > 0 then\n    :NEW.VLR_BASE_ICMS := :NEW.QTD * :NEW.VLR_UNITARIO;\n    if :NEW.IND_FRETE_NOTA = 'Y' then\n      :NEW.VLR_BASE_ICMS := :NEW.VLR_BASE_ICMS + :NEW.VLR_FRETE;\n    end if;\n    :NEW.VLR_ICMS := :NEW.VLR_BASE_ICMS * :NEW.ALQ_ICMS / 100;\n  else\n    :NEW.VLR_BASE_ICMS := 0;\n    :NEW.VLR_ICMS      := 0;\n  end if;*/\n  --\n\n  --\n  --  ICMS PROPRIO\n  if :NEW.ALQ_ICMS = 0\n     and :NEW.ALQ_ICMS <> :OLD.ALQ_ICMS then\n    :NEW.VLR_BASE_ICMS := 0;\n    :NEW.VLR_ICMS      := 0;\n  else\n    if NVL(:NEW.VLR_BASE_ICMS, 0) > 0\n       or NVL(:NEW.VLR_ICMS, 0) > 0 then\n      VN_AUX_CALC := NVL(:NEW.VLR_ICMS, 0);\n      BEG_PCK_CPR_COMPRAS.PRC_VALIDA_VALORES(:NEW.ALQ_ICMS,\n                                             :NEW.VLR_BASE_ICMS,\n                                             VN_AUX_CALC);\n      if VN_AUX_CALC = -1 then\n        VC_MSG_ERRO := 'Valores negativos no calculo do ICMS digitado!';\n      elsif VN_AUX_CALC = -2 then\n        VC_MSG_ERRO := 'Impossivel apurar valor do ICMS digitado!';\n      elsif VN_AUX_CALC = -3 then\n        VC_MSG_ERRO := 'Valor apurado de ICMS digitado diferente do valor informado! Para calculo automatico deixe o valor zerado.';\n      else\n        :NEW.VLR_ICMS := VN_AUX_CALC;\n      end if;\n      if VC_MSG_ERRO is not null then\n        goto FIM;\n      end if;\n    end if;\n  end if;\n  --\n  if NVL(:NEW.VLR_BASE_ICMS_SUBST, 0) > 0\n     or NVL(:NEW.VLR_ICMS_SUBST, 0) > 0 then\n\n    VN_AUX_CALC := NVL(:NEW.VLR_ICMS_SUBST, 0);\n    BEG_PCK_CPR_COMPRAS.PRC_VALIDA_VALORES(:NEW.ALQ_ICMS_SUBST,\n                                           :NEW.VLR_BASE_ICMS_SUBST,\n                                           VN_AUX_CALC);\n    if VN_AUX_CALC = -1 then\n      VC_MSG_ERRO := 'Valores negativos no calculo do ICMS da substituicao digitada!';\n    elsif VN_AUX_CALC = -2 then\n      VC_MSG_ERRO := 'Impossivel apurar valor do ICMS da substituicao digitada!';\n    elsif VN_AUX_CALC = -3 then\n      VC_MSG_ERRO := 'Valor apurado de ICMS da substituicao digitada diferente do valor informado! Para calculo automatico deixe o valor zerado.';\n    else\n      :NEW.VLR_ICMS_SUBST := VN_AUX_CALC;\n    end if;\n    if VC_MSG_ERRO is not null then\n      goto FIM;\n    end if;\n\n  end if;\n  -- AOK - 08/09/2011 ----------------------------------------------------------\n  if NVL(:NEW.BEG_FIS_CST_IPI_ID, 0) = 0\n     or NVL(:NEW.BEG_FIS_CST_PIS_ID, 0) = 0\n     or NVL(:NEW.BEG_FIS_CST_COFINS_ID, 0) = 0 then\n    open CCFOCST;\n    fetch CCFOCST\n      into RCFOCST;\n    close CCFOCST;\n    if NVL(:NEW.BEG_FIS_CST_IPI_ID, 0) = 0 then\n      :NEW.BEG_FIS_CST_IPI_ID := RCFOCST.BEG_FIS_CST_IPI_ID;\n    end if;\n    if NVL(:NEW.BEG_FIS_CST_PIS_ID, 0) = 0 then\n      :NEW.BEG_FIS_CST_PIS_ID := RCFOCST.BEG_FIS_CST_PIS_ID;\n    end if;\n    if NVL(:NEW.BEG_FIS_CST_COFINS_ID, 0) = 0 then\n      :NEW.BEG_FIS_CST_COFINS_ID := RCFOCST.BEG_FIS_CST_COFINS_ID;\n    end if;\n  end if;\n\n  -- aok - 07/11/2011 - IPI ----------------------------------------------------\n  if :NEW.BEG_FIS_CST_IPI_ID <> NVL(:OLD.BEG_FIS_CST_IPI_ID, 0)\n     or :NEW.ALQ_IPI <> NVL(:OLD.ALQ_IPI, 0) then\n    open CCIPI(:NEW.BEG_FIS_CST_IPI_ID);\n    fetch CCIPI\n      into RCIPI;\n    close CCIPI;\n    :NEW.BEG_FIS_CST_IPI_ID  := RCIPI.BEG_FIS_CST_IPI_ID;\n    :NEW.VLR_BASE_IPI        := 0;\n    :NEW.VLR_BASE_OUTROS_IPI := 0;\n    if NVL(RCIPI.IND_CALCULA, 'Y') = 'Y' then\n      if NVL(:NEW.ALQ_IPI, 0) = 0 then\n        :NEW.ALQ_IPI := NVL(:NEW.ALQ_IPI_ANT, 0);\n      else\n        :NEW.ALQ_IPI_ANT := NVL(:NEW.ALQ_IPI, 0);\n      end if;\n      :NEW.VLR_BASE_IPI := :NEW.QTD * :NEW.VLR_UNITARIO;\n      :NEW.VLR_IPI      := ROUND(:NEW.VLR_BASE_IPI * (:NEW.ALQ_IPI / 100),\n                                 2);\n    else\n      if NVL(:NEW.VLR_BASE_OUTROS_IPI, 0) = 0\n         or NVL(:NEW.VLR_BASE_IPI, 0) = 0 then\n        :NEW.VLR_BASE_OUTROS_IPI := :NEW.QTD * :NEW.VLR_UNITARIO;\n      else\n        :NEW.VLR_BASE_OUTROS_IPI := :NEW.VLR_BASE_IPI;\n      end if;\n      :NEW.ALQ_IPI      := 0;\n      :NEW.VLR_BASE_IPI := 0;\n      :NEW.VLR_IPI      := 0;\n    end if;\n    --\n  end if;\n  -----------------------------------------------------------------------------\n\n  -- aok - 25/08/2011 ----------------------------------------------------------\n  -- Pis\n  if :NEW.BEG_FIS_CST_PIS_ID <> NVL(:OLD.BEG_FIS_CST_PIS_ID, 0)\n     or :NEW.ALQ_PIS <> NVL(:OLD.ALQ_PIS, 0) then\n    open CCP(:NEW.BEG_FIS_CST_PIS_ID);\n    fetch CCP\n      into RCP;\n    close CCP;\n    :NEW.CST_PIS            := RCP.VALUE;\n    :NEW.BEG_FIS_CST_PIS_ID := RCP.BEG_FIS_CST_PIS_ID;\n    if NVL(RCP.IND_CALCULA, 'Y') = 'Y' then\n      if NVL(:NEW.ALQ_PIS, 0) = 0 then\n        :NEW.ALQ_PIS := BEG_FNC_RETORNA_PARAM_GERAL('Fiscal',\n                                                    null,\n                                                    'PERC_PIS');\n      end if;\n      :NEW.VLR_BASE_PIS := :NEW.QTD * :NEW.VLR_UNITARIO;\n      :NEW.VLR_PIS      := ROUND(:NEW.VLR_BASE_PIS * (:NEW.ALQ_PIS / 100),\n                                 2);\n    else\n      :NEW.ALQ_PIS      := 0;\n      :NEW.VLR_BASE_PIS := 0;\n      :NEW.VLR_PIS      := 0;\n    end if;\n    --\n    --    update BEG_CPR_NFE_FISCAL F\n    --       set F.VLR_PIS = F.VLR_PIS + :NEW.VLR_PIS - :OLD.VLR_PIS\n    --     where F.BEG_CPR_NFE_FISCAL_ID = :NEW.BEG_CPR_NFE_FISCAL_ID;\n    --\n  end if;\n  -- Cofins\n  if :NEW.BEG_FIS_CST_COFINS_ID <> NVL(:OLD.BEG_FIS_CST_COFINS_ID, 0)\n     or :NEW.ALQ_COFINS <> NVL(:OLD.ALQ_COFINS, 0) then\n    open CCC(:NEW.BEG_FIS_CST_COFINS_ID);\n    fetch CCC\n      into RCC;\n    close CCC;\n    :NEW.CST_COFINS            := RCC.VALUE;\n    :NEW.BEG_FIS_CST_COFINS_ID := RCC.BEG_FIS_CST_COFINS_ID;\n    if NVL(RCC.IND_CALCULA, 'Y') = 'Y' then\n      if NVL(:NEW.ALQ_COFINS, 0) = 0 then\n        :NEW.ALQ_COFINS := BEG_FNC_RETORNA_PARAM_GERAL('Fiscal',\n                                                       null,\n                                                       'PERC_COFINS');\n      end if;\n      :NEW.VLR_BASE_COFINS := :NEW.QTD * :NEW.VLR_UNITARIO;\n      :NEW.VLR_COFINS      := ROUND(:NEW.VLR_BASE_COFINS *\n                                    (:NEW.ALQ_COFINS / 100),\n                                    2);\n    else\n      :NEW.VLR_BASE_COFINS := 0;\n      :NEW.VLR_COFINS      := 0;\n      :NEW.ALQ_COFINS      := 0;\n    end if;\n    --\n    --    update BEG_CPR_NFE_FISCAL F\n    --       set F.VLR_COFINS = F.VLR_COFINS + :NEW.VLR_COFINS - :OLD.VLR_COFINS\n    --     where F.BEG_CPR_NFE_FISCAL_ID = :NEW.BEG_CPR_NFE_FISCAL_ID;\n    --\n  end if;\n  ----------------------------------------------------------------------------\n  update BEG_CPR_NFE_FISCAL A\n     set A.VLR_BASE_ICMS        = A.VLR_BASE_ICMS + :NEW.VLR_BASE_ICMS -\n                                  :OLD.VLR_BASE_ICMS,\n         A.VLR_ICMS             = A.VLR_ICMS + :NEW.VLR_ICMS - :OLD.VLR_ICMS,\n         A.VLR_BASE_OUTROS_ICMS = A.VLR_BASE_OUTROS_ICMS +\n                                  :NEW.VLR_BASE_OUTROS_ICMS -\n                                  :OLD.VLR_BASE_OUTROS_ICMS,\n         A.VLR_BASE_ISENTO_ICMS = A.VLR_BASE_ISENTO_ICMS +\n                                  :NEW.VLR_BASE_ISENTO_ICMS -\n                                  :OLD.VLR_BASE_ISENTO_ICMS,\n         A.VLR_COFINS           = A.VLR_COFINS + :NEW.VLR_COFINS -\n                                  :OLD.VLR_COFINS,\n         A.VLR_PIS              = A.VLR_PIS + :NEW.VLR_PIS - :OLD.VLR_PIS,\n         -- aok - 07/11/2011 --\n         A.VLR_IPI             = A.VLR_IPI + :NEW.VLR_IPI - :OLD.VLR_IPI,\n         A.VLR_BASE_IPI        = A.VLR_BASE_IPI + :NEW.VLR_BASE_IPI -\n                                 :OLD.VLR_BASE_IPI,\n         A.VLR_BASE_OUTROS_IPI = A.VLR_BASE_OUTROS_IPI +\n                                 :NEW.VLR_BASE_OUTROS_IPI -\n                                 :OLD.VLR_BASE_OUTROS_IPI,\n         A.VLR_BASE_ISENTO_IPI = A.VLR_BASE_ISENTO_IPI +\n                                 :NEW.VLR_BASE_ISENTO_IPI -\n                                 :OLD.VLR_BASE_ISENTO_IPI\n   where A.BEG_CPR_NFE_FISCAL_ID = :NEW.BEG_CPR_NFE_FISCAL_ID;\n  --\n/*  -- aok - 09/11/2011 - Deve permitir o acerto manual na tela, por iso desabilitado\n  if :NEW.BEG_FIS_TRIB_ICMS_ID <> :OLD.BEG_FIS_TRIB_ICMS_ID then\n    open CCFO(:NEW.BEG_VW_CFOP_ENT_ID); -- aok - 08/11/2011\n    fetch CCFO\n      into RCFO;\n    close CCFO;\n    select BEG_FNC_GERA_COD_SIT_TRIB(2,\n                                     NVL(:NEW.VLR_BASE_ICMS, 0),\n                                     NVL(:NEW.VLR_BASE_OUTROS_ICMS, 0),\n                                     NVL(:NEW.VLR_BASE_ISENTO_ICMS, 0),\n                                     NVL(:NEW.VLR_BASE_ICMS_SUBST, 0),\n                                     NVL(RCFO.CFOP, 0) -- aok - 08/11/2011\n                                     )\n      into :NEW.BEG_FIS_TRIB_ICMS_ID\n      from DUAL;\n  end if;*/\n\n  -- Ajusta a base outros quando icms não informado ----------------------------\n  if :NEW.ALQ_ICMS = 0\n     and :NEW.VLR_BASE_ICMS = 0\n     and :NEW.VLR_ICMS = 0\n     and :NEW.VLR_BASE_OUTROS_ICMS = 0\n     and :NEW.VLR_BASE_ISENTO_ICMS = 0 then\n    :NEW.VLR_BASE_OUTROS_ICMS := ROUND(:NEW.QTD * :NEW.VLR_UNITARIO, 2);\n  end if;\n  ------------------------------------------------------------------------------\n\n  <<FIM>>\n  if VC_MSG_ERRO is not null then\n    RAISE_APPLICATION_ERROR(-20001, VC_MSG_ERRO);\n  end if;\n\nend BEG_TRG_BU_NFE_ITEM_FISCAL;\n"}`;
    
    }
}
