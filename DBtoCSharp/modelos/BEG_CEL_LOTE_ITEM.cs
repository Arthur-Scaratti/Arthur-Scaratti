
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Models
{
    public class BEG_CEL_LOTE_ITEM
    {

        [NotMapped]
        public string Trigger_BEG_TRG_BIUD_CEL_LOTE_ITEM { get; set; } = `{"triggering_event":"INSERT OR UPDATE OR DELETE","trigger_body":"declare\n  /*------------------------------------------------------------------------------------------------\n    Objetivo(s)..: Trigger que valida os itens (seriais) inseridos em um lote e atualiza os totais.\n    Módulo.......: CEL - Celulares\n    Analista.....: Tiago Gabriel\n    Alterações:\n    Data        Desenvolvedor  Alteração\n    04/03/2008  Tiago Gabriel  Criação.\n    ------------------------------------------------------------------------------------------------*/\n  --pragma autonomous_transaction;\n\n  vn_qtd_total Number( 1 ) := 0;\n\nbegin\n  -- Se está excluindo a capa do lote, não processa os itens\n  if beg_pck_cel_celulares.vb_exclui_lote then\n    return;\n  end if;\n\n  -- Não possibilita alteração do lote.\n  if updating( 'BEG_CEL_LOTE_ID' ) then\n    Raise_Application_Error( -20001, 'Impossível alterar lote! Excluir o serial e inserir no lote correto.' );\n  end if;\n\n  -- Conforme operação, soma ou diminui nos totais\n  if inserting then\n    vn_qtd_total := 1;\n  elsif deleting then\n    vn_qtd_total := -1;\n  end if;\n\n  -- Atualiza o total no lote\n  update beg_cel_lote\n     set qtd_total = qtd_total + vn_qtd_total\n   where beg_cel_lote_id = Nvl( :new.beg_cel_lote_id, :old.beg_cel_lote_id );\n\n  -- Atualiza o total nos totais\n  merge into beg_cel_lote_total t\n  using ( select Nvl( :new.beg_cel_lote_id, :old.beg_cel_lote_id )                                  beg_cel_lote_id\n               , Nvl( beg_pck_cel_celulares.fnc_serial( Nvl( :new.value, :old.value ), 'ITE' ), 0 ) beg_cpr_nfe_item_id\n               , Nvl( beg_pck_cel_celulares.fnc_serial( Nvl( :new.value, :old.value ), 'ITS' ), 0 ) beg_fat_nfs_item_id\n               , Nvl( beg_pck_cel_celulares.fnc_serial( Nvl( :new.value, :old.value ), 'IC' ), 0 )  beg_cel_codigo_id\n            from dual ) c\n     on ( t.beg_cel_lote_id               = c.beg_cel_lote_id\n    and   Nvl( t.beg_cpr_nfe_item_id, 0 ) = Nvl( c.beg_cpr_nfe_item_id, 0 )\n    and   Nvl( t.beg_fat_nfs_item_id, 0 ) = Nvl( c.beg_fat_nfs_item_id, 0 )\n    and   Nvl( t.beg_cel_codigo_id, 0 )   = Nvl( c.beg_cel_codigo_id, 0 ) )\n   when matched then\n        update set qtd_total = qtd_total + vn_qtd_total\n   when not matched then\n        insert ( beg_cel_lote_total_id\n               , ad_client_id\n               , ad_org_id\n               , createdby\n               , updatedby\n               , qtd_total\n               , beg_cel_lote_id\n               , beg_cel_codigo_id\n               , beg_cpr_nfe_item_id\n               , beg_fat_nfs_item_id )\n        values ( beg_fnc_ad_sequence( 'BEG_CEL_LOTE_TOTAL' )\n               , :new.ad_client_id\n               , :new.ad_org_id\n               , :new.updatedby\n               , :new.updatedby\n               , 1\n               , c.beg_cel_lote_id\n               , Decode( c.beg_cel_codigo_id\n                       , 0, null\n                          , c.beg_cel_codigo_id )\n               , Decode( c.beg_cpr_nfe_item_id\n                       , 0, null\n                          , c.beg_cpr_nfe_item_id )\n               , Decode( c.beg_fat_nfs_item_id\n                       , 0, null\n                          , c.beg_fat_nfs_item_id ) );\n\nend BEG_TRG_BIUD_CEL_LOTE_ITEM;\n"}`;
    
    }
}
