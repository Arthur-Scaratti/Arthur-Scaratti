{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":"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","sourcesContent":["export { TsGenerator } from './generator';\r\n\r\nvar watch = require('watch')\r\nvar config = require('./appconfig.json')\r\nimport fs = require('fs');\r\nimport path = require('path');\r\nvar shell = require('shelljs');\r\n\r\nimport { FileEmitter, FileEmitOptions, MethodEmitOptions, NamespaceEmitOptions } from 'fluffy-spoon.javascript.csharp-to-typescript-generator';\r\nimport { CSharpFile, CSharpNamespace, CSharpMethod } from \"fluffy-spoon.javascript.csharp-parser/src/Models\";\r\nimport { TsGenerator } from './generator';\r\n\r\nconsole.info(\"Running\");\r\nif (config.generateOnStart == true) {\r\n    readCsDirectory(path.join(\".\", config.watchPaths.cs));\r\n}\r\nvar watchPath = path.join(\".\", config.watchPaths.cs);\r\nif (fs.existsSync(watchPath)) {\r\n    StartWatch(watchPath);\r\n}\r\nfunction StartWatch(watchPath) {\r\n    watch.watchTree(watchPath, { ignoreNotPermitted: true, ignoreUnreadableDir: true, ignoreDotFiles: true }, function (file, curr, prev) {\r\n        try {\r\n            console.info(\"Wathing started on \" + watchPath)\r\n            if (typeof file == \"object\" && prev === null && curr === null) {\r\n            } else if (prev === null) {\r\n\r\n                fs.stat(file, function (error, stat) {\r\n                    if (error) {\r\n                        console.error(\"Error stating file.\", error);\r\n                        return;\r\n                    } \r\n                    if (stat.isFile() && (<string>file).endsWith('.cs')) {\r\n                        console.info(\"created file: \" + file);\r\n                        generateTsFromCs(file);\r\n                    }\r\n                    else if (stat.isDirectory()) {\r\n                        console.log(\"created folder: \" + file);\r\n                        readCsDirectory(file);\r\n                    }\r\n                });\r\n            } else if (curr.nlink === 0) {\r\n                console.info(\"removed: \" + file);\r\n                removeTs(file);\r\n            } else {\r\n                console.info(\"changed: \" + file);\r\n                generateTsFromCs(file);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    })\r\n}\r\nfunction removeTs(csFile) {\r\n    try {\r\n        var tsFile = path.join(config.watchPaths.ts, csFile.replace(config.watchPaths.cs, \"\"))\r\n        tsFile = tsFile.replace(\".cs\", \".ts\");\r\n        if (fs.existsSync(tsFile)) {\r\n            fs.stat(tsFile, function (error, stat) {\r\n                if (error) {\r\n                    console.error(\"Error stating file.\", error);\r\n                    return;\r\n                }\r\n                if (stat.isFile()) {\r\n                    fs.unlink(tsFile, a => {\r\n                        console.log(a);\r\n                    });\r\n                    console.info(\"removed ts file: \" + tsFile);\r\n                }\r\n                else if (stat.isDirectory()) {\r\n                    deleteFolderRecursive(tsFile);\r\n                    console.info(\"removed ts directory: \" + tsFile);\r\n                }\r\n            });\r\n\r\n        }\r\n        else {\r\n            console.warn(\"File can't be removed because it doesn't exist: \" + tsFile);\r\n        }\r\n    } catch (e) {\r\n        console.error(\"failed to removed ts file: \" + tsFile);\r\n        console.error(e);\r\n    }\r\n}\r\nvar deleteFolderRecursive = function (path) {\r\n    if (fs.existsSync(path)) {\r\n        fs.readdirSync(path).forEach(function (file, index) {\r\n            var curPath = path + \"/\" + file;\r\n            if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n                deleteFolderRecursive(curPath);\r\n            } else { // delete file\r\n                fs.unlinkSync(curPath);\r\n            }\r\n        });\r\n        fs.rmdirSync(path);\r\n    }\r\n};\r\nfunction readCsDirectory(rootPath) {\r\n    try {\r\n        fs.readdir(rootPath, function (err, files) {\r\n            if (err) {\r\n                console.error(\"Could not list the directory.\", err);\r\n                return;\r\n            }\r\n            files.forEach(function (file, index) {\r\n                var fromPath = path.join(rootPath, file);\r\n\r\n                fs.stat(fromPath, function (error, stat) {\r\n                    if (error) {\r\n                        console.error(\"Error stating file.\", error);\r\n                        return;\r\n                    }\r\n                    if (stat.isFile() && fromPath.endsWith('.cs')) {\r\n                        console.log(\"'%s' is a file.\", fromPath);\r\n                        generateTsFromCs(fromPath);\r\n                    }\r\n                    else if (stat.isDirectory()) {\r\n                        console.info(\"'%s' is a directory.\", fromPath);\r\n                        readCsDirectory(fromPath);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    } catch (e) {\r\n        console.error(\"Failed to read the directory \" + rootPath);\r\n    }\r\n\r\n}\r\n\r\nfunction generateTsFromCs(file: string) {\r\n    try {\r\n        var csFile = fs.readFileSync(file, 'utf8');\r\n        var generator = new TsGenerator(csFile);\r\n        var typescriptCode = generator.GetTypescriptCode();\r\n\r\n        var newFileName = path.join(config.watchPaths.ts, file.replace(config.watchPaths.cs, \"\"));\r\n        newFileName = newFileName.replace(\".cs\", \".ts\");\r\n        var dirname = path.dirname(newFileName);\r\n        if (!fs.existsSync(dirname)) {\r\n            shell.mkdir('-p', dirname);\r\n        }\r\n        fs.writeFile(newFileName, typescriptCode, 'utf-8', function (err) {\r\n            if (err) {\r\n                console.log('failed to save ' + newFileName + '. ' + err);\r\n            } else {\r\n                console.log(\"succesfully saved \" + newFileName);\r\n            }\r\n        });\r\n    } catch (e) {\r\n        console.error(\"Failed to generate the ts file\" + file);\r\n        console.error(e);\r\n    }\r\n\r\n}\r\nfunction getFileName(filePath: string): string {\r\n    return filePath.replace(/\\\\$/, '').split('\\\\').pop();\r\n}\r\n\r\n\r\n"]}